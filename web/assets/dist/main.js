/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/alpinejs/dist/module.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/alpinejs/dist/module.esm.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return module_default; });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n\nvar __markAsModule = target => __defProp(target, \"__esModule\", {\n  value: true\n});\n\nvar __commonJS = (callback, module) => () => {\n  if (!module) {\n    module = {\n      exports: {}\n    };\n    callback(module.exports, module);\n  }\n\n  return module.exports;\n};\n\nvar __exportStar = (target, module, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module)) if (!__hasOwnProp.call(target, key) && key !== \"default\") __defProp(target, key, {\n      get: () => module[key],\n      enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n};\n\nvar __toModule = module => {\n  return __exportStar(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, \"default\", module && module.__esModule && \"default\" in module ? {\n    get: () => module.default,\n    enumerable: true\n  } : {\n    value: module,\n    enumerable: true\n  })), module);\n}; // node_modules/@vue/shared/dist/shared.cjs.js\n\n\nvar require_shared_cjs = __commonJS(exports => {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function makeMap(str, expectsLowerCase) {\n    const map = Object.create(null);\n    const list = str.split(\",\");\n\n    for (let i = 0; i < list.length; i++) {\n      map[list[i]] = true;\n    }\n\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\n  }\n\n  var PatchFlagNames = {\n    [1]: `TEXT`,\n    [2]: `CLASS`,\n    [4]: `STYLE`,\n    [8]: `PROPS`,\n    [16]: `FULL_PROPS`,\n    [32]: `HYDRATE_EVENTS`,\n    [64]: `STABLE_FRAGMENT`,\n    [128]: `KEYED_FRAGMENT`,\n    [256]: `UNKEYED_FRAGMENT`,\n    [512]: `NEED_PATCH`,\n    [1024]: `DYNAMIC_SLOTS`,\n    [2048]: `DEV_ROOT_FRAGMENT`,\n    [-1]: `HOISTED`,\n    [-2]: `BAIL`\n  };\n  var slotFlagsText = {\n    [1]: \"STABLE\",\n    [2]: \"DYNAMIC\",\n    [3]: \"FORWARDED\"\n  };\n  var GLOBALS_WHITE_LISTED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt\";\n  var isGloballyWhitelisted = /* @__PURE__ */makeMap(GLOBALS_WHITE_LISTED);\n  var range = 2;\n\n  function generateCodeFrame(source, start2 = 0, end = source.length) {\n    const lines = source.split(/\\r?\\n/);\n    let count = 0;\n    const res = [];\n\n    for (let i = 0; i < lines.length; i++) {\n      count += lines[i].length + 1;\n\n      if (count >= start2) {\n        for (let j = i - range; j <= i + range || end > count; j++) {\n          if (j < 0 || j >= lines.length) continue;\n          const line = j + 1;\n          res.push(`${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\n          const lineLength = lines[j].length;\n\n          if (j === i) {\n            const pad = start2 - (count - lineLength) + 1;\n            const length = Math.max(1, end > count ? lineLength - pad : end - start2);\n            res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n          } else if (j > i) {\n            if (end > count) {\n              const length = Math.max(Math.min(end - count, lineLength), 1);\n              res.push(`   |  ` + \"^\".repeat(length));\n            }\n\n            count += lineLength + 1;\n          }\n        }\n\n        break;\n      }\n    }\n\n    return res.join(\"\\n\");\n  }\n\n  var specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\n  var isSpecialBooleanAttr = /* @__PURE__ */makeMap(specialBooleanAttrs);\n  var isBooleanAttr2 = /* @__PURE__ */makeMap(specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`);\n  var unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\n  var attrValidationCache = {};\n\n  function isSSRSafeAttrName(name) {\n    if (attrValidationCache.hasOwnProperty(name)) {\n      return attrValidationCache[name];\n    }\n\n    const isUnsafe = unsafeAttrCharRE.test(name);\n\n    if (isUnsafe) {\n      console.error(`unsafe attribute name: ${name}`);\n    }\n\n    return attrValidationCache[name] = !isUnsafe;\n  }\n\n  var propsToAttrMap = {\n    acceptCharset: \"accept-charset\",\n    className: \"class\",\n    htmlFor: \"for\",\n    httpEquiv: \"http-equiv\"\n  };\n  var isNoUnitNumericStyleProp = /* @__PURE__ */makeMap(`animation-iteration-count,border-image-outset,border-image-slice,border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,stroke-miterlimit,stroke-opacity,stroke-width`);\n  var isKnownAttr = /* @__PURE__ */makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`);\n\n  function normalizeStyle(value) {\n    if (isArray(value)) {\n      const res = {};\n\n      for (let i = 0; i < value.length; i++) {\n        const item = value[i];\n        const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\n\n        if (normalized) {\n          for (const key in normalized) {\n            res[key] = normalized[key];\n          }\n        }\n      }\n\n      return res;\n    } else if (isObject(value)) {\n      return value;\n    }\n  }\n\n  var listDelimiterRE = /;(?![^(]*\\))/g;\n  var propertyDelimiterRE = /:(.+)/;\n\n  function parseStringStyle(cssText) {\n    const ret = {};\n    cssText.split(listDelimiterRE).forEach(item => {\n      if (item) {\n        const tmp = item.split(propertyDelimiterRE);\n        tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n      }\n    });\n    return ret;\n  }\n\n  function stringifyStyle(styles) {\n    let ret = \"\";\n\n    if (!styles) {\n      return ret;\n    }\n\n    for (const key in styles) {\n      const value = styles[key];\n      const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n\n      if (isString(value) || typeof value === \"number\" && isNoUnitNumericStyleProp(normalizedKey)) {\n        ret += `${normalizedKey}:${value};`;\n      }\n    }\n\n    return ret;\n  }\n\n  function normalizeClass(value) {\n    let res = \"\";\n\n    if (isString(value)) {\n      res = value;\n    } else if (isArray(value)) {\n      for (let i = 0; i < value.length; i++) {\n        const normalized = normalizeClass(value[i]);\n\n        if (normalized) {\n          res += normalized + \" \";\n        }\n      }\n    } else if (isObject(value)) {\n      for (const name in value) {\n        if (value[name]) {\n          res += name + \" \";\n        }\n      }\n    }\n\n    return res.trim();\n  }\n\n  var HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\n  var SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\n  var VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\n  var isHTMLTag = /* @__PURE__ */makeMap(HTML_TAGS);\n  var isSVGTag = /* @__PURE__ */makeMap(SVG_TAGS);\n  var isVoidTag = /* @__PURE__ */makeMap(VOID_TAGS);\n  var escapeRE = /[\"'&<>]/;\n\n  function escapeHtml(string) {\n    const str = \"\" + string;\n    const match = escapeRE.exec(str);\n\n    if (!match) {\n      return str;\n    }\n\n    let html = \"\";\n    let escaped;\n    let index;\n    let lastIndex = 0;\n\n    for (index = match.index; index < str.length; index++) {\n      switch (str.charCodeAt(index)) {\n        case 34:\n          escaped = \"&quot;\";\n          break;\n\n        case 38:\n          escaped = \"&amp;\";\n          break;\n\n        case 39:\n          escaped = \"&#39;\";\n          break;\n\n        case 60:\n          escaped = \"&lt;\";\n          break;\n\n        case 62:\n          escaped = \"&gt;\";\n          break;\n\n        default:\n          continue;\n      }\n\n      if (lastIndex !== index) {\n        html += str.substring(lastIndex, index);\n      }\n\n      lastIndex = index + 1;\n      html += escaped;\n    }\n\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n  }\n\n  var commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\n\n  function escapeHtmlComment(src) {\n    return src.replace(commentStripRE, \"\");\n  }\n\n  function looseCompareArrays(a, b) {\n    if (a.length !== b.length) return false;\n    let equal = true;\n\n    for (let i = 0; equal && i < a.length; i++) {\n      equal = looseEqual(a[i], b[i]);\n    }\n\n    return equal;\n  }\n\n  function looseEqual(a, b) {\n    if (a === b) return true;\n    let aValidType = isDate(a);\n    let bValidType = isDate(b);\n\n    if (aValidType || bValidType) {\n      return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n    }\n\n    aValidType = isArray(a);\n    bValidType = isArray(b);\n\n    if (aValidType || bValidType) {\n      return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n    }\n\n    aValidType = isObject(a);\n    bValidType = isObject(b);\n\n    if (aValidType || bValidType) {\n      if (!aValidType || !bValidType) {\n        return false;\n      }\n\n      const aKeysCount = Object.keys(a).length;\n      const bKeysCount = Object.keys(b).length;\n\n      if (aKeysCount !== bKeysCount) {\n        return false;\n      }\n\n      for (const key in a) {\n        const aHasKey = a.hasOwnProperty(key);\n        const bHasKey = b.hasOwnProperty(key);\n\n        if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n          return false;\n        }\n      }\n    }\n\n    return String(a) === String(b);\n  }\n\n  function looseIndexOf(arr, val) {\n    return arr.findIndex(item => looseEqual(item, val));\n  }\n\n  var toDisplayString = val => {\n    return val == null ? \"\" : isObject(val) ? JSON.stringify(val, replacer, 2) : String(val);\n  };\n\n  var replacer = (_key, val) => {\n    if (isMap(val)) {\n      return {\n        [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {\n          entries[`${key} =>`] = val2;\n          return entries;\n        }, {})\n      };\n    } else if (isSet(val)) {\n      return {\n        [`Set(${val.size})`]: [...val.values()]\n      };\n    } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n      return String(val);\n    }\n\n    return val;\n  };\n\n  var babelParserDefaultPlugins = [\"bigInt\", \"optionalChaining\", \"nullishCoalescingOperator\"];\n  var EMPTY_OBJ = Object.freeze({});\n  var EMPTY_ARR = Object.freeze([]);\n\n  var NOOP = () => {};\n\n  var NO = () => false;\n\n  var onRE = /^on[^a-z]/;\n\n  var isOn = key => onRE.test(key);\n\n  var isModelListener = key => key.startsWith(\"onUpdate:\");\n\n  var extend = Object.assign;\n\n  var remove = (arr, el) => {\n    const i = arr.indexOf(el);\n\n    if (i > -1) {\n      arr.splice(i, 1);\n    }\n  };\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var hasOwn = (val, key) => hasOwnProperty.call(val, key);\n\n  var isArray = Array.isArray;\n\n  var isMap = val => toTypeString(val) === \"[object Map]\";\n\n  var isSet = val => toTypeString(val) === \"[object Set]\";\n\n  var isDate = val => val instanceof Date;\n\n  var isFunction = val => typeof val === \"function\";\n\n  var isString = val => typeof val === \"string\";\n\n  var isSymbol = val => typeof val === \"symbol\";\n\n  var isObject = val => val !== null && typeof val === \"object\";\n\n  var isPromise = val => {\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n  };\n\n  var objectToString = Object.prototype.toString;\n\n  var toTypeString = value => objectToString.call(value);\n\n  var toRawType = value => {\n    return toTypeString(value).slice(8, -1);\n  };\n\n  var isPlainObject = val => toTypeString(val) === \"[object Object]\";\n\n  var isIntegerKey = key => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\n\n  var isReservedProp = /* @__PURE__ */makeMap(\",key,ref,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\");\n\n  var cacheStringFunction = fn => {\n    const cache = Object.create(null);\n    return str => {\n      const hit = cache[str];\n      return hit || (cache[str] = fn(str));\n    };\n  };\n\n  var camelizeRE = /-(\\w)/g;\n  var camelize = cacheStringFunction(str => {\n    return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n  });\n  var hyphenateRE = /\\B([A-Z])/g;\n  var hyphenate = cacheStringFunction(str => str.replace(hyphenateRE, \"-$1\").toLowerCase());\n  var capitalize = cacheStringFunction(str => str.charAt(0).toUpperCase() + str.slice(1));\n  var toHandlerKey = cacheStringFunction(str => str ? `on${capitalize(str)}` : ``);\n\n  var hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\n\n  var invokeArrayFns = (fns, arg) => {\n    for (let i = 0; i < fns.length; i++) {\n      fns[i](arg);\n    }\n  };\n\n  var def = (obj, key, value) => {\n    Object.defineProperty(obj, key, {\n      configurable: true,\n      enumerable: false,\n      value\n    });\n  };\n\n  var toNumber = val => {\n    const n = parseFloat(val);\n    return isNaN(n) ? val : n;\n  };\n\n  var _globalThis;\n\n  var getGlobalThis = () => {\n    return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n  };\n\n  exports.EMPTY_ARR = EMPTY_ARR;\n  exports.EMPTY_OBJ = EMPTY_OBJ;\n  exports.NO = NO;\n  exports.NOOP = NOOP;\n  exports.PatchFlagNames = PatchFlagNames;\n  exports.babelParserDefaultPlugins = babelParserDefaultPlugins;\n  exports.camelize = camelize;\n  exports.capitalize = capitalize;\n  exports.def = def;\n  exports.escapeHtml = escapeHtml;\n  exports.escapeHtmlComment = escapeHtmlComment;\n  exports.extend = extend;\n  exports.generateCodeFrame = generateCodeFrame;\n  exports.getGlobalThis = getGlobalThis;\n  exports.hasChanged = hasChanged;\n  exports.hasOwn = hasOwn;\n  exports.hyphenate = hyphenate;\n  exports.invokeArrayFns = invokeArrayFns;\n  exports.isArray = isArray;\n  exports.isBooleanAttr = isBooleanAttr2;\n  exports.isDate = isDate;\n  exports.isFunction = isFunction;\n  exports.isGloballyWhitelisted = isGloballyWhitelisted;\n  exports.isHTMLTag = isHTMLTag;\n  exports.isIntegerKey = isIntegerKey;\n  exports.isKnownAttr = isKnownAttr;\n  exports.isMap = isMap;\n  exports.isModelListener = isModelListener;\n  exports.isNoUnitNumericStyleProp = isNoUnitNumericStyleProp;\n  exports.isObject = isObject;\n  exports.isOn = isOn;\n  exports.isPlainObject = isPlainObject;\n  exports.isPromise = isPromise;\n  exports.isReservedProp = isReservedProp;\n  exports.isSSRSafeAttrName = isSSRSafeAttrName;\n  exports.isSVGTag = isSVGTag;\n  exports.isSet = isSet;\n  exports.isSpecialBooleanAttr = isSpecialBooleanAttr;\n  exports.isString = isString;\n  exports.isSymbol = isSymbol;\n  exports.isVoidTag = isVoidTag;\n  exports.looseEqual = looseEqual;\n  exports.looseIndexOf = looseIndexOf;\n  exports.makeMap = makeMap;\n  exports.normalizeClass = normalizeClass;\n  exports.normalizeStyle = normalizeStyle;\n  exports.objectToString = objectToString;\n  exports.parseStringStyle = parseStringStyle;\n  exports.propsToAttrMap = propsToAttrMap;\n  exports.remove = remove;\n  exports.slotFlagsText = slotFlagsText;\n  exports.stringifyStyle = stringifyStyle;\n  exports.toDisplayString = toDisplayString;\n  exports.toHandlerKey = toHandlerKey;\n  exports.toNumber = toNumber;\n  exports.toRawType = toRawType;\n  exports.toTypeString = toTypeString;\n}); // node_modules/@vue/shared/index.js\n\n\nvar require_shared = __commonJS((exports, module) => {\n  \"use strict\";\n\n  if (false) {} else {\n    module.exports = require_shared_cjs();\n  }\n}); // node_modules/@vue/reactivity/dist/reactivity.cjs.js\n\n\nvar require_reactivity_cjs = __commonJS(exports => {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var shared = require_shared();\n  var targetMap = new WeakMap();\n  var effectStack = [];\n  var activeEffect;\n  var ITERATE_KEY = Symbol(\"iterate\");\n  var MAP_KEY_ITERATE_KEY = Symbol(\"Map key iterate\");\n\n  function isEffect(fn) {\n    return fn && fn._isEffect === true;\n  }\n\n  function effect3(fn, options = shared.EMPTY_OBJ) {\n    if (isEffect(fn)) {\n      fn = fn.raw;\n    }\n\n    const effect4 = createReactiveEffect(fn, options);\n\n    if (!options.lazy) {\n      effect4();\n    }\n\n    return effect4;\n  }\n\n  function stop2(effect4) {\n    if (effect4.active) {\n      cleanup(effect4);\n\n      if (effect4.options.onStop) {\n        effect4.options.onStop();\n      }\n\n      effect4.active = false;\n    }\n  }\n\n  var uid = 0;\n\n  function createReactiveEffect(fn, options) {\n    const effect4 = function reactiveEffect() {\n      if (!effect4.active) {\n        return fn();\n      }\n\n      if (!effectStack.includes(effect4)) {\n        cleanup(effect4);\n\n        try {\n          enableTracking();\n          effectStack.push(effect4);\n          activeEffect = effect4;\n          return fn();\n        } finally {\n          effectStack.pop();\n          resetTracking();\n          activeEffect = effectStack[effectStack.length - 1];\n        }\n      }\n    };\n\n    effect4.id = uid++;\n    effect4.allowRecurse = !!options.allowRecurse;\n    effect4._isEffect = true;\n    effect4.active = true;\n    effect4.raw = fn;\n    effect4.deps = [];\n    effect4.options = options;\n    return effect4;\n  }\n\n  function cleanup(effect4) {\n    const {\n      deps\n    } = effect4;\n\n    if (deps.length) {\n      for (let i = 0; i < deps.length; i++) {\n        deps[i].delete(effect4);\n      }\n\n      deps.length = 0;\n    }\n  }\n\n  var shouldTrack = true;\n  var trackStack = [];\n\n  function pauseTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = false;\n  }\n\n  function enableTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = true;\n  }\n\n  function resetTracking() {\n    const last = trackStack.pop();\n    shouldTrack = last === void 0 ? true : last;\n  }\n\n  function track(target, type, key) {\n    if (!shouldTrack || activeEffect === void 0) {\n      return;\n    }\n\n    let depsMap = targetMap.get(target);\n\n    if (!depsMap) {\n      targetMap.set(target, depsMap = new Map());\n    }\n\n    let dep = depsMap.get(key);\n\n    if (!dep) {\n      depsMap.set(key, dep = new Set());\n    }\n\n    if (!dep.has(activeEffect)) {\n      dep.add(activeEffect);\n      activeEffect.deps.push(dep);\n\n      if (activeEffect.options.onTrack) {\n        activeEffect.options.onTrack({\n          effect: activeEffect,\n          target,\n          type,\n          key\n        });\n      }\n    }\n  }\n\n  function trigger(target, type, key, newValue, oldValue, oldTarget) {\n    const depsMap = targetMap.get(target);\n\n    if (!depsMap) {\n      return;\n    }\n\n    const effects = new Set();\n\n    const add2 = effectsToAdd => {\n      if (effectsToAdd) {\n        effectsToAdd.forEach(effect4 => {\n          if (effect4 !== activeEffect || effect4.allowRecurse) {\n            effects.add(effect4);\n          }\n        });\n      }\n    };\n\n    if (type === \"clear\") {\n      depsMap.forEach(add2);\n    } else if (key === \"length\" && shared.isArray(target)) {\n      depsMap.forEach((dep, key2) => {\n        if (key2 === \"length\" || key2 >= newValue) {\n          add2(dep);\n        }\n      });\n    } else {\n      if (key !== void 0) {\n        add2(depsMap.get(key));\n      }\n\n      switch (type) {\n        case \"add\":\n          if (!shared.isArray(target)) {\n            add2(depsMap.get(ITERATE_KEY));\n\n            if (shared.isMap(target)) {\n              add2(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          } else if (shared.isIntegerKey(key)) {\n            add2(depsMap.get(\"length\"));\n          }\n\n          break;\n\n        case \"delete\":\n          if (!shared.isArray(target)) {\n            add2(depsMap.get(ITERATE_KEY));\n\n            if (shared.isMap(target)) {\n              add2(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          }\n\n          break;\n\n        case \"set\":\n          if (shared.isMap(target)) {\n            add2(depsMap.get(ITERATE_KEY));\n          }\n\n          break;\n      }\n    }\n\n    const run = effect4 => {\n      if (effect4.options.onTrigger) {\n        effect4.options.onTrigger({\n          effect: effect4,\n          target,\n          key,\n          type,\n          newValue,\n          oldValue,\n          oldTarget\n        });\n      }\n\n      if (effect4.options.scheduler) {\n        effect4.options.scheduler(effect4);\n      } else {\n        effect4();\n      }\n    };\n\n    effects.forEach(run);\n  }\n\n  var isNonTrackableKeys = /* @__PURE__ */shared.makeMap(`__proto__,__v_isRef,__isVue`);\n  var builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol).map(key => Symbol[key]).filter(shared.isSymbol));\n  var get2 = /* @__PURE__ */createGetter();\n  var shallowGet = /* @__PURE__ */createGetter(false, true);\n  var readonlyGet = /* @__PURE__ */createGetter(true);\n  var shallowReadonlyGet = /* @__PURE__ */createGetter(true, true);\n  var arrayInstrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach(key => {\n    const method = Array.prototype[key];\n\n    arrayInstrumentations[key] = function (...args) {\n      const arr = toRaw2(this);\n\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n\n      const res = method.apply(arr, args);\n\n      if (res === -1 || res === false) {\n        return method.apply(arr, args.map(toRaw2));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach(key => {\n    const method = Array.prototype[key];\n\n    arrayInstrumentations[key] = function (...args) {\n      pauseTracking();\n      const res = method.apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n\n  function createGetter(isReadonly2 = false, shallow = false) {\n    return function get3(target, key, receiver) {\n      if (key === \"__v_isReactive\") {\n        return !isReadonly2;\n      } else if (key === \"__v_isReadonly\") {\n        return isReadonly2;\n      } else if (key === \"__v_raw\" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n        return target;\n      }\n\n      const targetIsArray = shared.isArray(target);\n\n      if (!isReadonly2 && targetIsArray && shared.hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n\n      const res = Reflect.get(target, key, receiver);\n\n      if (shared.isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n        return res;\n      }\n\n      if (!isReadonly2) {\n        track(target, \"get\", key);\n      }\n\n      if (shallow) {\n        return res;\n      }\n\n      if (isRef(res)) {\n        const shouldUnwrap = !targetIsArray || !shared.isIntegerKey(key);\n        return shouldUnwrap ? res.value : res;\n      }\n\n      if (shared.isObject(res)) {\n        return isReadonly2 ? readonly(res) : reactive3(res);\n      }\n\n      return res;\n    };\n  }\n\n  var set2 = /* @__PURE__ */createSetter();\n  var shallowSet = /* @__PURE__ */createSetter(true);\n\n  function createSetter(shallow = false) {\n    return function set3(target, key, value, receiver) {\n      let oldValue = target[key];\n\n      if (!shallow) {\n        value = toRaw2(value);\n        oldValue = toRaw2(oldValue);\n\n        if (!shared.isArray(target) && isRef(oldValue) && !isRef(value)) {\n          oldValue.value = value;\n          return true;\n        }\n      }\n\n      const hadKey = shared.isArray(target) && shared.isIntegerKey(key) ? Number(key) < target.length : shared.hasOwn(target, key);\n      const result = Reflect.set(target, key, value, receiver);\n\n      if (target === toRaw2(receiver)) {\n        if (!hadKey) {\n          trigger(target, \"add\", key, value);\n        } else if (shared.hasChanged(value, oldValue)) {\n          trigger(target, \"set\", key, value, oldValue);\n        }\n      }\n\n      return result;\n    };\n  }\n\n  function deleteProperty(target, key) {\n    const hadKey = shared.hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n\n    return result;\n  }\n\n  function has(target, key) {\n    const result = Reflect.has(target, key);\n\n    if (!shared.isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n\n    return result;\n  }\n\n  function ownKeys(target) {\n    track(target, \"iterate\", shared.isArray(target) ? \"length\" : ITERATE_KEY);\n    return Reflect.ownKeys(target);\n  }\n\n  var mutableHandlers = {\n    get: get2,\n    set: set2,\n    deleteProperty,\n    has,\n    ownKeys\n  };\n  var readonlyHandlers = {\n    get: readonlyGet,\n\n    set(target, key) {\n      {\n        console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\n      }\n      return true;\n    },\n\n    deleteProperty(target, key) {\n      {\n        console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\n      }\n      return true;\n    }\n\n  };\n  var shallowReactiveHandlers = shared.extend({}, mutableHandlers, {\n    get: shallowGet,\n    set: shallowSet\n  });\n  var shallowReadonlyHandlers = shared.extend({}, readonlyHandlers, {\n    get: shallowReadonlyGet\n  });\n\n  var toReactive = value => shared.isObject(value) ? reactive3(value) : value;\n\n  var toReadonly = value => shared.isObject(value) ? readonly(value) : value;\n\n  var toShallow = value => value;\n\n  var getProto = v => Reflect.getPrototypeOf(v);\n\n  function get$1(target, key, isReadonly2 = false, isShallow = false) {\n    target = target[\"__v_raw\"];\n    const rawTarget = toRaw2(target);\n    const rawKey = toRaw2(key);\n\n    if (key !== rawKey) {\n      !isReadonly2 && track(rawTarget, \"get\", key);\n    }\n\n    !isReadonly2 && track(rawTarget, \"get\", rawKey);\n    const {\n      has: has2\n    } = getProto(rawTarget);\n    const wrap = isShallow ? toShallow : isReadonly2 ? toReadonly : toReactive;\n\n    if (has2.call(rawTarget, key)) {\n      return wrap(target.get(key));\n    } else if (has2.call(rawTarget, rawKey)) {\n      return wrap(target.get(rawKey));\n    } else if (target !== rawTarget) {\n      target.get(key);\n    }\n  }\n\n  function has$1(key, isReadonly2 = false) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw2(target);\n    const rawKey = toRaw2(key);\n\n    if (key !== rawKey) {\n      !isReadonly2 && track(rawTarget, \"has\", key);\n    }\n\n    !isReadonly2 && track(rawTarget, \"has\", rawKey);\n    return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n  }\n\n  function size(target, isReadonly2 = false) {\n    target = target[\"__v_raw\"];\n    !isReadonly2 && track(toRaw2(target), \"iterate\", ITERATE_KEY);\n    return Reflect.get(target, \"size\", target);\n  }\n\n  function add(value) {\n    value = toRaw2(value);\n    const target = toRaw2(this);\n    const proto = getProto(target);\n    const hadKey = proto.has.call(target, value);\n\n    if (!hadKey) {\n      target.add(value);\n      trigger(target, \"add\", value, value);\n    }\n\n    return this;\n  }\n\n  function set$1(key, value) {\n    value = toRaw2(value);\n    const target = toRaw2(this);\n    const {\n      has: has2,\n      get: get3\n    } = getProto(target);\n    let hadKey = has2.call(target, key);\n\n    if (!hadKey) {\n      key = toRaw2(key);\n      hadKey = has2.call(target, key);\n    } else {\n      checkIdentityKeys(target, has2, key);\n    }\n\n    const oldValue = get3.call(target, key);\n    target.set(key, value);\n\n    if (!hadKey) {\n      trigger(target, \"add\", key, value);\n    } else if (shared.hasChanged(value, oldValue)) {\n      trigger(target, \"set\", key, value, oldValue);\n    }\n\n    return this;\n  }\n\n  function deleteEntry(key) {\n    const target = toRaw2(this);\n    const {\n      has: has2,\n      get: get3\n    } = getProto(target);\n    let hadKey = has2.call(target, key);\n\n    if (!hadKey) {\n      key = toRaw2(key);\n      hadKey = has2.call(target, key);\n    } else {\n      checkIdentityKeys(target, has2, key);\n    }\n\n    const oldValue = get3 ? get3.call(target, key) : void 0;\n    const result = target.delete(key);\n\n    if (hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n\n    return result;\n  }\n\n  function clear() {\n    const target = toRaw2(this);\n    const hadItems = target.size !== 0;\n    const oldTarget = shared.isMap(target) ? new Map(target) : new Set(target);\n    const result = target.clear();\n\n    if (hadItems) {\n      trigger(target, \"clear\", void 0, void 0, oldTarget);\n    }\n\n    return result;\n  }\n\n  function createForEach(isReadonly2, isShallow) {\n    return function forEach(callback, thisArg) {\n      const observed = this;\n      const target = observed[\"__v_raw\"];\n      const rawTarget = toRaw2(target);\n      const wrap = isShallow ? toShallow : isReadonly2 ? toReadonly : toReactive;\n      !isReadonly2 && track(rawTarget, \"iterate\", ITERATE_KEY);\n      return target.forEach((value, key) => {\n        return callback.call(thisArg, wrap(value), wrap(key), observed);\n      });\n    };\n  }\n\n  function createIterableMethod(method, isReadonly2, isShallow) {\n    return function (...args) {\n      const target = this[\"__v_raw\"];\n      const rawTarget = toRaw2(target);\n      const targetIsMap = shared.isMap(rawTarget);\n      const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n      const isKeyOnly = method === \"keys\" && targetIsMap;\n      const innerIterator = target[method](...args);\n      const wrap = isShallow ? toShallow : isReadonly2 ? toReadonly : toReactive;\n      !isReadonly2 && track(rawTarget, \"iterate\", isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\n      return {\n        next() {\n          const {\n            value,\n            done\n          } = innerIterator.next();\n          return done ? {\n            value,\n            done\n          } : {\n            value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n            done\n          };\n        },\n\n        [Symbol.iterator]() {\n          return this;\n        }\n\n      };\n    };\n  }\n\n  function createReadonlyMethod(type) {\n    return function (...args) {\n      {\n        const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n        console.warn(`${shared.capitalize(type)} operation ${key}failed: target is readonly.`, toRaw2(this));\n      }\n      return type === \"delete\" ? false : this;\n    };\n  }\n\n  var mutableInstrumentations = {\n    get(key) {\n      return get$1(this, key);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  var shallowInstrumentations = {\n    get(key) {\n      return get$1(this, key, false, true);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  var readonlyInstrumentations = {\n    get(key) {\n      return get$1(this, key, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  var shallowReadonlyInstrumentations = {\n    get(key) {\n      return get$1(this, key, true, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  var iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach(method => {\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n  });\n\n  function createInstrumentationGetter(isReadonly2, shallow) {\n    const instrumentations = shallow ? isReadonly2 ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly2 ? readonlyInstrumentations : mutableInstrumentations;\n    return (target, key, receiver) => {\n      if (key === \"__v_isReactive\") {\n        return !isReadonly2;\n      } else if (key === \"__v_isReadonly\") {\n        return isReadonly2;\n      } else if (key === \"__v_raw\") {\n        return target;\n      }\n\n      return Reflect.get(shared.hasOwn(instrumentations, key) && key in target ? instrumentations : target, key, receiver);\n    };\n  }\n\n  var mutableCollectionHandlers = {\n    get: createInstrumentationGetter(false, false)\n  };\n  var shallowCollectionHandlers = {\n    get: createInstrumentationGetter(false, true)\n  };\n  var readonlyCollectionHandlers = {\n    get: createInstrumentationGetter(true, false)\n  };\n  var shallowReadonlyCollectionHandlers = {\n    get: createInstrumentationGetter(true, true)\n  };\n\n  function checkIdentityKeys(target, has2, key) {\n    const rawKey = toRaw2(key);\n\n    if (rawKey !== key && has2.call(target, rawKey)) {\n      const type = shared.toRawType(target);\n      console.warn(`Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`);\n    }\n  }\n\n  var reactiveMap = new WeakMap();\n  var shallowReactiveMap = new WeakMap();\n  var readonlyMap = new WeakMap();\n  var shallowReadonlyMap = new WeakMap();\n\n  function targetTypeMap(rawType) {\n    switch (rawType) {\n      case \"Object\":\n      case \"Array\":\n        return 1;\n\n      case \"Map\":\n      case \"Set\":\n      case \"WeakMap\":\n      case \"WeakSet\":\n        return 2;\n\n      default:\n        return 0;\n    }\n  }\n\n  function getTargetType(value) {\n    return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 : targetTypeMap(shared.toRawType(value));\n  }\n\n  function reactive3(target) {\n    if (target && target[\"__v_isReadonly\"]) {\n      return target;\n    }\n\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n  }\n\n  function shallowReactive(target) {\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n  }\n\n  function readonly(target) {\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n  }\n\n  function shallowReadonly(target) {\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n  }\n\n  function createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n    if (!shared.isObject(target)) {\n      {\n        console.warn(`value cannot be made reactive: ${String(target)}`);\n      }\n      return target;\n    }\n\n    if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n      return target;\n    }\n\n    const existingProxy = proxyMap.get(target);\n\n    if (existingProxy) {\n      return existingProxy;\n    }\n\n    const targetType = getTargetType(target);\n\n    if (targetType === 0) {\n      return target;\n    }\n\n    const proxy = new Proxy(target, targetType === 2 ? collectionHandlers : baseHandlers);\n    proxyMap.set(target, proxy);\n    return proxy;\n  }\n\n  function isReactive2(value) {\n    if (isReadonly(value)) {\n      return isReactive2(value[\"__v_raw\"]);\n    }\n\n    return !!(value && value[\"__v_isReactive\"]);\n  }\n\n  function isReadonly(value) {\n    return !!(value && value[\"__v_isReadonly\"]);\n  }\n\n  function isProxy(value) {\n    return isReactive2(value) || isReadonly(value);\n  }\n\n  function toRaw2(observed) {\n    return observed && toRaw2(observed[\"__v_raw\"]) || observed;\n  }\n\n  function markRaw(value) {\n    shared.def(value, \"__v_skip\", true);\n    return value;\n  }\n\n  var convert = val => shared.isObject(val) ? reactive3(val) : val;\n\n  function isRef(r) {\n    return Boolean(r && r.__v_isRef === true);\n  }\n\n  function ref(value) {\n    return createRef(value);\n  }\n\n  function shallowRef(value) {\n    return createRef(value, true);\n  }\n\n  var RefImpl = class {\n    constructor(_rawValue, _shallow = false) {\n      this._rawValue = _rawValue;\n      this._shallow = _shallow;\n      this.__v_isRef = true;\n      this._value = _shallow ? _rawValue : convert(_rawValue);\n    }\n\n    get value() {\n      track(toRaw2(this), \"get\", \"value\");\n      return this._value;\n    }\n\n    set value(newVal) {\n      if (shared.hasChanged(toRaw2(newVal), this._rawValue)) {\n        this._rawValue = newVal;\n        this._value = this._shallow ? newVal : convert(newVal);\n        trigger(toRaw2(this), \"set\", \"value\", newVal);\n      }\n    }\n\n  };\n\n  function createRef(rawValue, shallow = false) {\n    if (isRef(rawValue)) {\n      return rawValue;\n    }\n\n    return new RefImpl(rawValue, shallow);\n  }\n\n  function triggerRef(ref2) {\n    trigger(toRaw2(ref2), \"set\", \"value\", ref2.value);\n  }\n\n  function unref(ref2) {\n    return isRef(ref2) ? ref2.value : ref2;\n  }\n\n  var shallowUnwrapHandlers = {\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n    set: (target, key, value, receiver) => {\n      const oldValue = target[key];\n\n      if (isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      } else {\n        return Reflect.set(target, key, value, receiver);\n      }\n    }\n  };\n\n  function proxyRefs(objectWithRefs) {\n    return isReactive2(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n  }\n\n  var CustomRefImpl = class {\n    constructor(factory) {\n      this.__v_isRef = true;\n      const {\n        get: get3,\n        set: set3\n      } = factory(() => track(this, \"get\", \"value\"), () => trigger(this, \"set\", \"value\"));\n      this._get = get3;\n      this._set = set3;\n    }\n\n    get value() {\n      return this._get();\n    }\n\n    set value(newVal) {\n      this._set(newVal);\n    }\n\n  };\n\n  function customRef(factory) {\n    return new CustomRefImpl(factory);\n  }\n\n  function toRefs(object) {\n    if (!isProxy(object)) {\n      console.warn(`toRefs() expects a reactive object but received a plain one.`);\n    }\n\n    const ret = shared.isArray(object) ? new Array(object.length) : {};\n\n    for (const key in object) {\n      ret[key] = toRef(object, key);\n    }\n\n    return ret;\n  }\n\n  var ObjectRefImpl = class {\n    constructor(_object, _key) {\n      this._object = _object;\n      this._key = _key;\n      this.__v_isRef = true;\n    }\n\n    get value() {\n      return this._object[this._key];\n    }\n\n    set value(newVal) {\n      this._object[this._key] = newVal;\n    }\n\n  };\n\n  function toRef(object, key) {\n    return isRef(object[key]) ? object[key] : new ObjectRefImpl(object, key);\n  }\n\n  var ComputedRefImpl = class {\n    constructor(getter, _setter, isReadonly2) {\n      this._setter = _setter;\n      this._dirty = true;\n      this.__v_isRef = true;\n      this.effect = effect3(getter, {\n        lazy: true,\n        scheduler: () => {\n          if (!this._dirty) {\n            this._dirty = true;\n            trigger(toRaw2(this), \"set\", \"value\");\n          }\n        }\n      });\n      this[\"__v_isReadonly\"] = isReadonly2;\n    }\n\n    get value() {\n      const self2 = toRaw2(this);\n\n      if (self2._dirty) {\n        self2._value = this.effect();\n        self2._dirty = false;\n      }\n\n      track(self2, \"get\", \"value\");\n      return self2._value;\n    }\n\n    set value(newValue) {\n      this._setter(newValue);\n    }\n\n  };\n\n  function computed(getterOrOptions) {\n    let getter;\n    let setter;\n\n    if (shared.isFunction(getterOrOptions)) {\n      getter = getterOrOptions;\n\n      setter = () => {\n        console.warn(\"Write operation failed: computed value is readonly\");\n      };\n    } else {\n      getter = getterOrOptions.get;\n      setter = getterOrOptions.set;\n    }\n\n    return new ComputedRefImpl(getter, setter, shared.isFunction(getterOrOptions) || !getterOrOptions.set);\n  }\n\n  exports.ITERATE_KEY = ITERATE_KEY;\n  exports.computed = computed;\n  exports.customRef = customRef;\n  exports.effect = effect3;\n  exports.enableTracking = enableTracking;\n  exports.isProxy = isProxy;\n  exports.isReactive = isReactive2;\n  exports.isReadonly = isReadonly;\n  exports.isRef = isRef;\n  exports.markRaw = markRaw;\n  exports.pauseTracking = pauseTracking;\n  exports.proxyRefs = proxyRefs;\n  exports.reactive = reactive3;\n  exports.readonly = readonly;\n  exports.ref = ref;\n  exports.resetTracking = resetTracking;\n  exports.shallowReactive = shallowReactive;\n  exports.shallowReadonly = shallowReadonly;\n  exports.shallowRef = shallowRef;\n  exports.stop = stop2;\n  exports.toRaw = toRaw2;\n  exports.toRef = toRef;\n  exports.toRefs = toRefs;\n  exports.track = track;\n  exports.trigger = trigger;\n  exports.triggerRef = triggerRef;\n  exports.unref = unref;\n}); // node_modules/@vue/reactivity/index.js\n\n\nvar require_reactivity = __commonJS((exports, module) => {\n  \"use strict\";\n\n  if (false) {} else {\n    module.exports = require_reactivity_cjs();\n  }\n}); // packages/alpinejs/src/scheduler.js\n\n\nvar flushPending = false;\nvar flushing = false;\nvar queue = [];\n\nfunction scheduler(callback) {\n  queueJob(callback);\n}\n\nfunction queueJob(job) {\n  if (!queue.includes(job)) queue.push(job);\n  queueFlush();\n}\n\nfunction queueFlush() {\n  if (!flushing && !flushPending) {\n    flushPending = true;\n    queueMicrotask(flushJobs);\n  }\n}\n\nfunction flushJobs() {\n  flushPending = false;\n  flushing = true;\n\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n\n  queue.length = 0;\n  flushing = false;\n} // packages/alpinejs/src/reactivity.js\n\n\nvar reactive;\nvar effect;\nvar release;\nvar raw;\nvar shouldSchedule = true;\n\nfunction disableEffectScheduling(callback) {\n  shouldSchedule = false;\n  callback();\n  shouldSchedule = true;\n}\n\nfunction setReactivityEngine(engine) {\n  reactive = engine.reactive;\n  release = engine.release;\n\n  effect = callback => engine.effect(callback, {\n    scheduler: task => {\n      if (shouldSchedule) {\n        scheduler(task);\n      } else {\n        task();\n      }\n    }\n  });\n\n  raw = engine.raw;\n}\n\nfunction overrideEffect(override) {\n  effect = override;\n}\n\nfunction elementBoundEffect(el) {\n  let cleanup = () => {};\n\n  let wrappedEffect = callback => {\n    let effectReference = effect(callback);\n\n    if (!el._x_effects) {\n      el._x_effects = new Set();\n\n      el._x_runEffects = () => {\n        el._x_effects.forEach(i => i());\n      };\n    }\n\n    el._x_effects.add(effectReference);\n\n    cleanup = () => {\n      if (effectReference === void 0) return;\n\n      el._x_effects.delete(effectReference);\n\n      release(effectReference);\n    };\n  };\n\n  return [wrappedEffect, () => {\n    cleanup();\n  }];\n} // packages/alpinejs/src/mutation.js\n\n\nvar onAttributeAddeds = [];\nvar onElRemoveds = [];\nvar onElAddeds = [];\n\nfunction onElAdded(callback) {\n  onElAddeds.push(callback);\n}\n\nfunction onElRemoved(callback) {\n  onElRemoveds.push(callback);\n}\n\nfunction onAttributesAdded(callback) {\n  onAttributeAddeds.push(callback);\n}\n\nfunction onAttributeRemoved(el, name, callback) {\n  if (!el._x_attributeCleanups) el._x_attributeCleanups = {};\n  if (!el._x_attributeCleanups[name]) el._x_attributeCleanups[name] = [];\n\n  el._x_attributeCleanups[name].push(callback);\n}\n\nfunction cleanupAttributes(el, names) {\n  if (!el._x_attributeCleanups) return;\n  Object.entries(el._x_attributeCleanups).forEach(([name, value]) => {\n    (names === void 0 || names.includes(name)) && value.forEach(i => i());\n    delete el._x_attributeCleanups[name];\n  });\n}\n\nvar observer = new MutationObserver(onMutate);\nvar currentlyObserving = false;\n\nfunction startObservingMutations() {\n  observer.observe(document, {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true\n  });\n  currentlyObserving = true;\n}\n\nfunction stopObservingMutations() {\n  observer.disconnect();\n  currentlyObserving = false;\n}\n\nvar recordQueue = [];\nvar willProcessRecordQueue = false;\n\nfunction flushObserver() {\n  recordQueue = recordQueue.concat(observer.takeRecords());\n\n  if (recordQueue.length && !willProcessRecordQueue) {\n    willProcessRecordQueue = true;\n    queueMicrotask(() => {\n      processRecordQueue();\n      willProcessRecordQueue = false;\n    });\n  }\n}\n\nfunction processRecordQueue() {\n  onMutate(recordQueue);\n  recordQueue.length = 0;\n}\n\nfunction mutateDom(callback) {\n  if (!currentlyObserving) return callback();\n  flushObserver();\n  stopObservingMutations();\n  let result = callback();\n  startObservingMutations();\n  return result;\n}\n\nfunction onMutate(mutations) {\n  let addedNodes = [];\n  let removedNodes = [];\n  let addedAttributes = new Map();\n  let removedAttributes = new Map();\n\n  for (let i = 0; i < mutations.length; i++) {\n    if (mutations[i].target._x_ignoreMutationObserver) continue;\n\n    if (mutations[i].type === \"childList\") {\n      mutations[i].addedNodes.forEach(node => node.nodeType === 1 && addedNodes.push(node));\n      mutations[i].removedNodes.forEach(node => node.nodeType === 1 && removedNodes.push(node));\n    }\n\n    if (mutations[i].type === \"attributes\") {\n      let el = mutations[i].target;\n      let name = mutations[i].attributeName;\n      let oldValue = mutations[i].oldValue;\n\n      let add = () => {\n        if (!addedAttributes.has(el)) addedAttributes.set(el, []);\n        addedAttributes.get(el).push({\n          name,\n          value: el.getAttribute(name)\n        });\n      };\n\n      let remove = () => {\n        if (!removedAttributes.has(el)) removedAttributes.set(el, []);\n        removedAttributes.get(el).push(name);\n      };\n\n      if (el.hasAttribute(name) && oldValue === null) {\n        add();\n      } else if (el.hasAttribute(name)) {\n        remove();\n        add();\n      } else {\n        remove();\n      }\n    }\n  }\n\n  removedAttributes.forEach((attrs, el) => {\n    cleanupAttributes(el, attrs);\n  });\n  addedAttributes.forEach((attrs, el) => {\n    onAttributeAddeds.forEach(i => i(el, attrs));\n  });\n\n  for (let node of addedNodes) {\n    if (removedNodes.includes(node)) continue;\n    onElAddeds.forEach(i => i(node));\n  }\n\n  for (let node of removedNodes) {\n    if (addedNodes.includes(node)) continue;\n    onElRemoveds.forEach(i => i(node));\n  }\n\n  addedNodes = null;\n  removedNodes = null;\n  addedAttributes = null;\n  removedAttributes = null;\n} // packages/alpinejs/src/scope.js\n\n\nfunction addScopeToNode(node, data2, referenceNode) {\n  node._x_dataStack = [data2, ...closestDataStack(referenceNode || node)];\n  return () => {\n    node._x_dataStack = node._x_dataStack.filter(i => i !== data2);\n  };\n}\n\nfunction refreshScope(element, scope) {\n  let existingScope = element._x_dataStack[0];\n  Object.entries(scope).forEach(([key, value]) => {\n    existingScope[key] = value;\n  });\n}\n\nfunction closestDataStack(node) {\n  if (node._x_dataStack) return node._x_dataStack;\n\n  if (node instanceof ShadowRoot) {\n    return closestDataStack(node.host);\n  }\n\n  if (!node.parentNode) {\n    return [];\n  }\n\n  return closestDataStack(node.parentNode);\n}\n\nfunction mergeProxies(objects) {\n  return new Proxy({}, {\n    ownKeys: () => {\n      return Array.from(new Set(objects.flatMap(i => Object.keys(i))));\n    },\n    has: (target, name) => {\n      return objects.some(obj => obj.hasOwnProperty(name));\n    },\n    get: (target, name) => {\n      return (objects.find(obj => obj.hasOwnProperty(name)) || {})[name];\n    },\n    set: (target, name, value) => {\n      let closestObjectWithKey = objects.find(obj => obj.hasOwnProperty(name));\n\n      if (closestObjectWithKey) {\n        closestObjectWithKey[name] = value;\n      } else {\n        objects[objects.length - 1][name] = value;\n      }\n\n      return true;\n    }\n  });\n} // packages/alpinejs/src/interceptor.js\n\n\nfunction initInterceptors(data2) {\n  let isObject = val => typeof val === \"object\" && !Array.isArray(val) && val !== null;\n\n  let recurse = (obj, basePath = \"\") => {\n    Object.entries(obj).forEach(([key, value]) => {\n      let path = basePath === \"\" ? key : `${basePath}.${key}`;\n\n      if (typeof value === \"object\" && value !== null && value._x_interceptor) {\n        obj[key] = value.initialize(data2, path, key);\n      } else {\n        if (isObject(value) && value !== obj && !(value instanceof Element)) {\n          recurse(value, path);\n        }\n      }\n    });\n  };\n\n  return recurse(data2);\n}\n\nfunction interceptor(callback, mutateObj = () => {}) {\n  let obj = {\n    initialValue: void 0,\n    _x_interceptor: true,\n\n    initialize(data2, path, key) {\n      return callback(this.initialValue, () => get(data2, path), value => set(data2, path, value), path, key);\n    }\n\n  };\n  mutateObj(obj);\n  return initialValue => {\n    if (typeof initialValue === \"object\" && initialValue !== null && initialValue._x_interceptor) {\n      let initialize = obj.initialize.bind(obj);\n\n      obj.initialize = (data2, path, key) => {\n        let innerValue = initialValue.initialize(data2, path, key);\n        obj.initialValue = innerValue;\n        return initialize(data2, path, key);\n      };\n    } else {\n      obj.initialValue = initialValue;\n    }\n\n    return obj;\n  };\n}\n\nfunction get(obj, path) {\n  return path.split(\".\").reduce((carry, segment) => carry[segment], obj);\n}\n\nfunction set(obj, path, value) {\n  if (typeof path === \"string\") path = path.split(\".\");\n  if (path.length === 1) obj[path[0]] = value;else if (path.length === 0) throw error;else {\n    if (obj[path[0]]) return set(obj[path[0]], path.slice(1), value);else {\n      obj[path[0]] = {};\n      return set(obj[path[0]], path.slice(1), value);\n    }\n  }\n} // packages/alpinejs/src/magics.js\n\n\nvar magics = {};\n\nfunction magic(name, callback) {\n  magics[name] = callback;\n}\n\nfunction injectMagics(obj, el) {\n  Object.entries(magics).forEach(([name, callback]) => {\n    Object.defineProperty(obj, `$${name}`, {\n      get() {\n        return callback(el, {\n          Alpine: alpine_default,\n          interceptor\n        });\n      },\n\n      enumerable: false\n    });\n  });\n  return obj;\n} // packages/alpinejs/src/evaluator.js\n\n\nfunction evaluate(el, expression, extras = {}) {\n  let result;\n  evaluateLater(el, expression)(value => result = value, extras);\n  return result;\n}\n\nfunction evaluateLater(...args) {\n  return theEvaluatorFunction(...args);\n}\n\nvar theEvaluatorFunction = normalEvaluator;\n\nfunction setEvaluator(newEvaluator) {\n  theEvaluatorFunction = newEvaluator;\n}\n\nfunction normalEvaluator(el, expression) {\n  let overriddenMagics = {};\n  injectMagics(overriddenMagics, el);\n  let dataStack = [overriddenMagics, ...closestDataStack(el)];\n\n  if (typeof expression === \"function\") {\n    return generateEvaluatorFromFunction(dataStack, expression);\n  }\n\n  let evaluator = generateEvaluatorFromString(dataStack, expression);\n  return tryCatch.bind(null, el, expression, evaluator);\n}\n\nfunction generateEvaluatorFromFunction(dataStack, func) {\n  return (receiver = () => {}, {\n    scope = {},\n    params = []\n  } = {}) => {\n    let result = func.apply(mergeProxies([scope, ...dataStack]), params);\n    runIfTypeOfFunction(receiver, result);\n  };\n}\n\nvar evaluatorMemo = {};\n\nfunction generateFunctionFromString(expression) {\n  if (evaluatorMemo[expression]) {\n    return evaluatorMemo[expression];\n  }\n\n  let AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n  let rightSideSafeExpression = /^[\\n\\s]*if.*\\(.*\\)/.test(expression) || /^(let|const)/.test(expression) ? `(() => { ${expression} })()` : expression;\n  let func = new AsyncFunction([\"__self\", \"scope\"], `with (scope) { __self.result = ${rightSideSafeExpression} }; __self.finished = true; return __self.result;`);\n  evaluatorMemo[expression] = func;\n  return func;\n}\n\nfunction generateEvaluatorFromString(dataStack, expression) {\n  let func = generateFunctionFromString(expression);\n  return (receiver = () => {}, {\n    scope = {},\n    params = []\n  } = {}) => {\n    func.result = void 0;\n    func.finished = false;\n    let completeScope = mergeProxies([scope, ...dataStack]);\n    let promise = func(func, completeScope);\n\n    if (func.finished) {\n      runIfTypeOfFunction(receiver, func.result, completeScope, params);\n    } else {\n      promise.then(result => {\n        runIfTypeOfFunction(receiver, result, completeScope, params);\n      });\n    }\n  };\n}\n\nfunction runIfTypeOfFunction(receiver, value, scope, params) {\n  if (typeof value === \"function\") {\n    let result = value.apply(scope, params);\n\n    if (result instanceof Promise) {\n      result.then(i => runIfTypeOfFunction(receiver, i, scope, params));\n    } else {\n      receiver(result);\n    }\n  } else {\n    receiver(value);\n  }\n}\n\nfunction tryCatch(el, expression, callback, ...args) {\n  try {\n    return callback(...args);\n  } catch (e) {\n    console.warn(`Alpine Expression Error: ${e.message}\n\nExpression: \"${expression}\"\n\n`, el);\n    throw e;\n  }\n} // packages/alpinejs/src/directives.js\n\n\nvar prefixAsString = \"x-\";\n\nfunction prefix(subject = \"\") {\n  return prefixAsString + subject;\n}\n\nfunction setPrefix(newPrefix) {\n  prefixAsString = newPrefix;\n}\n\nvar directiveHandlers = {};\n\nfunction directive(name, callback) {\n  directiveHandlers[name] = callback;\n}\n\nfunction directives(el, attributes, originalAttributeOverride) {\n  let transformedAttributeMap = {};\n  let directives2 = Array.from(attributes).map(toTransformedAttributes((newName, oldName) => transformedAttributeMap[newName] = oldName)).filter(outNonAlpineAttributes).map(toParsedDirectives(transformedAttributeMap, originalAttributeOverride)).sort(byPriority);\n  return directives2.map(directive2 => {\n    return getDirectiveHandler(el, directive2);\n  });\n}\n\nvar isDeferringHandlers = false;\nvar directiveHandlerStacks = new Map();\nvar currentHandlerStackKey = Symbol();\n\nfunction deferHandlingDirectives(callback) {\n  isDeferringHandlers = true;\n  let key = Symbol();\n  currentHandlerStackKey = key;\n  directiveHandlerStacks.set(key, []);\n\n  let flushHandlers = () => {\n    while (directiveHandlerStacks.get(key).length) directiveHandlerStacks.get(key).shift()();\n\n    directiveHandlerStacks.delete(key);\n  };\n\n  let stopDeferring = () => {\n    isDeferringHandlers = false;\n    flushHandlers();\n  };\n\n  callback(flushHandlers);\n  stopDeferring();\n}\n\nfunction getDirectiveHandler(el, directive2) {\n  let noop = () => {};\n\n  let handler3 = directiveHandlers[directive2.type] || noop;\n  let cleanups = [];\n\n  let cleanup = callback => cleanups.push(callback);\n\n  let [effect3, cleanupEffect] = elementBoundEffect(el);\n  cleanups.push(cleanupEffect);\n  let utilities = {\n    Alpine: alpine_default,\n    effect: effect3,\n    cleanup,\n    evaluateLater: evaluateLater.bind(evaluateLater, el),\n    evaluate: evaluate.bind(evaluate, el)\n  };\n\n  let doCleanup = () => cleanups.forEach(i => i());\n\n  onAttributeRemoved(el, directive2.original, doCleanup);\n\n  let fullHandler = () => {\n    if (el._x_ignore || el._x_ignoreSelf) return;\n    handler3.inline && handler3.inline(el, directive2, utilities);\n    handler3 = handler3.bind(handler3, el, directive2, utilities);\n    isDeferringHandlers ? directiveHandlerStacks.get(currentHandlerStackKey).push(handler3) : handler3();\n  };\n\n  fullHandler.runCleanups = doCleanup;\n  return fullHandler;\n}\n\nvar startingWith = (subject, replacement) => ({\n  name,\n  value\n}) => {\n  if (name.startsWith(subject)) name = name.replace(subject, replacement);\n  return {\n    name,\n    value\n  };\n};\n\nvar into = i => i;\n\nfunction toTransformedAttributes(callback) {\n  return ({\n    name,\n    value\n  }) => {\n    let {\n      name: newName,\n      value: newValue\n    } = attributeTransformers.reduce((carry, transform) => {\n      return transform(carry);\n    }, {\n      name,\n      value\n    });\n    if (newName !== name) callback(newName, name);\n    return {\n      name: newName,\n      value: newValue\n    };\n  };\n}\n\nvar attributeTransformers = [];\n\nfunction mapAttributes(callback) {\n  attributeTransformers.push(callback);\n}\n\nfunction outNonAlpineAttributes({\n  name\n}) {\n  return alpineAttributeRegex().test(name);\n}\n\nvar alpineAttributeRegex = () => new RegExp(`^${prefixAsString}([^:^.]+)\\\\b`);\n\nfunction toParsedDirectives(transformedAttributeMap, originalAttributeOverride) {\n  return ({\n    name,\n    value\n  }) => {\n    let typeMatch = name.match(alpineAttributeRegex());\n    let valueMatch = name.match(/:([a-zA-Z0-9\\-:]+)/);\n    let modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    let original = originalAttributeOverride || transformedAttributeMap[name] || name;\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace(\".\", \"\")),\n      expression: value,\n      original\n    };\n  };\n}\n\nvar DEFAULT = \"DEFAULT\";\nvar directiveOrder = [\"ignore\", \"ref\", \"data\", \"bind\", \"init\", \"for\", \"model\", \"transition\", \"show\", \"if\", DEFAULT, \"element\"];\n\nfunction byPriority(a, b) {\n  let typeA = directiveOrder.indexOf(a.type) === -1 ? DEFAULT : a.type;\n  let typeB = directiveOrder.indexOf(b.type) === -1 ? DEFAULT : b.type;\n  return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n} // packages/alpinejs/src/utils/dispatch.js\n\n\nfunction dispatch(el, name, detail = {}) {\n  el.dispatchEvent(new CustomEvent(name, {\n    detail,\n    bubbles: true,\n    composed: true,\n    cancelable: true\n  }));\n} // packages/alpinejs/src/nextTick.js\n\n\nvar tickStack = [];\nvar isHolding = false;\n\nfunction nextTick(callback) {\n  tickStack.push(callback);\n  queueMicrotask(() => {\n    isHolding || setTimeout(() => {\n      releaseNextTicks();\n    });\n  });\n}\n\nfunction releaseNextTicks() {\n  isHolding = false;\n\n  while (tickStack.length) tickStack.shift()();\n}\n\nfunction holdNextTicks() {\n  isHolding = true;\n} // packages/alpinejs/src/utils/walk.js\n\n\nfunction walk(el, callback) {\n  if (el instanceof ShadowRoot) {\n    Array.from(el.children).forEach(el2 => walk(el2, callback));\n    return;\n  }\n\n  let skip = false;\n  callback(el, () => skip = true);\n  if (skip) return;\n  let node = el.firstElementChild;\n\n  while (node) {\n    walk(node, callback, false);\n    node = node.nextElementSibling;\n  }\n} // packages/alpinejs/src/utils/warn.js\n\n\nfunction warn(message, ...args) {\n  console.warn(`Alpine Warning: ${message}`, ...args);\n} // packages/alpinejs/src/lifecycle.js\n\n\nfunction start() {\n  if (!document.body) warn(\"Unable to initialize. Trying to load Alpine before `<body>` is available. Did you forget to add `defer` in Alpine's `<script>` tag?\");\n  dispatch(document, \"alpine:init\");\n  dispatch(document, \"alpine:initializing\");\n  startObservingMutations();\n  onElAdded(el => initTree(el, walk));\n  onElRemoved(el => nextTick(() => destroyTree(el)));\n  onAttributesAdded((el, attrs) => {\n    directives(el, attrs).forEach(handle => handle());\n  });\n\n  let outNestedComponents = el => !closestRoot(el.parentElement);\n\n  Array.from(document.querySelectorAll(allSelectors())).filter(outNestedComponents).forEach(el => {\n    initTree(el);\n  });\n  dispatch(document, \"alpine:initialized\");\n}\n\nvar rootSelectorCallbacks = [];\nvar initSelectorCallbacks = [];\n\nfunction rootSelectors() {\n  return rootSelectorCallbacks.map(fn => fn());\n}\n\nfunction allSelectors() {\n  return rootSelectorCallbacks.concat(initSelectorCallbacks).map(fn => fn());\n}\n\nfunction addRootSelector(selectorCallback) {\n  rootSelectorCallbacks.push(selectorCallback);\n}\n\nfunction addInitSelector(selectorCallback) {\n  initSelectorCallbacks.push(selectorCallback);\n}\n\nfunction closestRoot(el) {\n  if (!el) return;\n  if (rootSelectors().some(selector => el.matches(selector))) return el;\n  if (!el.parentElement) return;\n  return closestRoot(el.parentElement);\n}\n\nfunction isRoot(el) {\n  return rootSelectors().some(selector => el.matches(selector));\n}\n\nfunction initTree(el, walker = walk) {\n  deferHandlingDirectives(() => {\n    walker(el, (el2, skip) => {\n      directives(el2, el2.attributes).forEach(handle => handle());\n      el2._x_ignore && skip();\n    });\n  });\n}\n\nfunction destroyTree(root) {\n  walk(root, el => cleanupAttributes(el));\n} // packages/alpinejs/src/plugin.js\n\n\nfunction plugin(callback) {\n  callback(alpine_default);\n} // packages/alpinejs/src/store.js\n\n\nvar stores = {};\nvar isReactive = false;\n\nfunction store(name, value) {\n  if (!isReactive) {\n    stores = reactive(stores);\n    isReactive = true;\n  }\n\n  if (value === void 0) {\n    return stores[name];\n  }\n\n  stores[name] = value;\n\n  if (typeof value === \"object\" && value !== null && value.hasOwnProperty(\"init\") && typeof value.init === \"function\") {\n    stores[name].init();\n  }\n}\n\nfunction getStores() {\n  return stores;\n} // packages/alpinejs/src/clone.js\n\n\nvar isCloning = false;\n\nfunction skipDuringClone(callback) {\n  return (...args) => isCloning || callback(...args);\n}\n\nfunction clone(oldEl, newEl) {\n  newEl._x_dataStack = oldEl._x_dataStack;\n  isCloning = true;\n  dontRegisterReactiveSideEffects(() => {\n    cloneTree(newEl);\n  });\n  isCloning = false;\n}\n\nfunction cloneTree(el) {\n  let hasRunThroughFirstEl = false;\n\n  let shallowWalker = (el2, callback) => {\n    walk(el2, (el3, skip) => {\n      if (hasRunThroughFirstEl && isRoot(el3)) return skip();\n      hasRunThroughFirstEl = true;\n      callback(el3, skip);\n    });\n  };\n\n  initTree(el, shallowWalker);\n}\n\nfunction dontRegisterReactiveSideEffects(callback) {\n  let cache = effect;\n  overrideEffect((callback2, el) => {\n    let storedEffect = cache(callback2);\n    release(storedEffect);\n    return () => {};\n  });\n  callback();\n  overrideEffect(cache);\n} // packages/alpinejs/src/datas.js\n\n\nvar datas = {};\n\nfunction data(name, callback) {\n  datas[name] = callback;\n}\n\nfunction injectDataProviders(obj, context) {\n  Object.entries(datas).forEach(([name, callback]) => {\n    Object.defineProperty(obj, name, {\n      get() {\n        return (...args) => {\n          return callback.bind(context)(...args);\n        };\n      },\n\n      enumerable: false\n    });\n  });\n  return obj;\n} // packages/alpinejs/src/alpine.js\n\n\nvar Alpine = {\n  get reactive() {\n    return reactive;\n  },\n\n  get release() {\n    return release;\n  },\n\n  get effect() {\n    return effect;\n  },\n\n  get raw() {\n    return raw;\n  },\n\n  version: \"3.2.3\",\n  disableEffectScheduling,\n  setReactivityEngine,\n  addRootSelector,\n  mapAttributes,\n  evaluateLater,\n  setEvaluator,\n  closestRoot,\n  interceptor,\n  mutateDom,\n  directive,\n  evaluate,\n  initTree,\n  nextTick,\n  prefix: setPrefix,\n  plugin,\n  magic,\n  store,\n  start,\n  clone,\n  data\n};\nvar alpine_default = Alpine; // packages/alpinejs/src/index.js\n\nvar import_reactivity9 = __toModule(require_reactivity()); // packages/alpinejs/src/magics/$nextTick.js\n\n\nmagic(\"nextTick\", () => nextTick); // packages/alpinejs/src/magics/$dispatch.js\n\nmagic(\"dispatch\", el => dispatch.bind(dispatch, el)); // packages/alpinejs/src/magics/$watch.js\n\nmagic(\"watch\", el => (key, callback) => {\n  let evaluate2 = evaluateLater(el, key);\n  let firstTime = true;\n  let oldValue;\n  effect(() => evaluate2(value => {\n    let div = document.createElement(\"div\");\n    div.dataset.throwAway = value;\n\n    if (!firstTime) {\n      queueMicrotask(() => {\n        callback(value, oldValue);\n        oldValue = value;\n      });\n    } else {\n      oldValue = value;\n    }\n\n    firstTime = false;\n  }));\n}); // packages/alpinejs/src/magics/$store.js\n\nmagic(\"store\", getStores); // packages/alpinejs/src/magics/$refs.js\n\nmagic(\"refs\", el => closestRoot(el)._x_refs || {}); // packages/alpinejs/src/magics/$el.js\n\nmagic(\"el\", el => el); // packages/alpinejs/src/utils/classes.js\n\nfunction setClasses(el, value) {\n  if (Array.isArray(value)) {\n    return setClassesFromString(el, value.join(\" \"));\n  } else if (typeof value === \"object\" && value !== null) {\n    return setClassesFromObject(el, value);\n  } else if (typeof value === \"function\") {\n    return setClasses(el, value());\n  }\n\n  return setClassesFromString(el, value);\n}\n\nfunction setClassesFromString(el, classString) {\n  let split = classString2 => classString2.split(\" \").filter(Boolean);\n\n  let missingClasses = classString2 => classString2.split(\" \").filter(i => !el.classList.contains(i)).filter(Boolean);\n\n  let addClassesAndReturnUndo = classes => {\n    el.classList.add(...classes);\n    return () => {\n      el.classList.remove(...classes);\n    };\n  };\n\n  classString = classString === true ? classString = \"\" : classString || \"\";\n  return addClassesAndReturnUndo(missingClasses(classString));\n}\n\nfunction setClassesFromObject(el, classObject) {\n  let split = classString => classString.split(\" \").filter(Boolean);\n\n  let forAdd = Object.entries(classObject).flatMap(([classString, bool]) => bool ? split(classString) : false).filter(Boolean);\n  let forRemove = Object.entries(classObject).flatMap(([classString, bool]) => !bool ? split(classString) : false).filter(Boolean);\n  let added = [];\n  let removed = [];\n  forRemove.forEach(i => {\n    if (el.classList.contains(i)) {\n      el.classList.remove(i);\n      removed.push(i);\n    }\n  });\n  forAdd.forEach(i => {\n    if (!el.classList.contains(i)) {\n      el.classList.add(i);\n      added.push(i);\n    }\n  });\n  return () => {\n    removed.forEach(i => el.classList.add(i));\n    added.forEach(i => el.classList.remove(i));\n  };\n} // packages/alpinejs/src/utils/styles.js\n\n\nfunction setStyles(el, value) {\n  if (typeof value === \"object\" && value !== null) {\n    return setStylesFromObject(el, value);\n  }\n\n  return setStylesFromString(el, value);\n}\n\nfunction setStylesFromObject(el, value) {\n  let previousStyles = {};\n  Object.entries(value).forEach(([key, value2]) => {\n    previousStyles[key] = el.style[key];\n    el.style.setProperty(key, value2);\n  });\n  setTimeout(() => {\n    if (el.style.length === 0) {\n      el.removeAttribute(\"style\");\n    }\n  });\n  return () => {\n    setStyles(el, previousStyles);\n  };\n}\n\nfunction setStylesFromString(el, value) {\n  let cache = el.getAttribute(\"style\", value);\n  el.setAttribute(\"style\", value);\n  return () => {\n    el.setAttribute(\"style\", cache);\n  };\n} // packages/alpinejs/src/utils/once.js\n\n\nfunction once(callback, fallback = () => {}) {\n  let called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      callback.apply(this, arguments);\n    } else {\n      fallback.apply(this, arguments);\n    }\n  };\n} // packages/alpinejs/src/directives/x-transition.js\n\n\ndirective(\"transition\", (el, {\n  value,\n  modifiers,\n  expression\n}, {\n  evaluate: evaluate2\n}) => {\n  if (typeof expression === \"function\") expression = evaluate2(expression);\n\n  if (!expression) {\n    registerTransitionsFromHelper(el, modifiers, value);\n  } else {\n    registerTransitionsFromClassString(el, expression, value);\n  }\n});\n\nfunction registerTransitionsFromClassString(el, classString, stage) {\n  registerTransitionObject(el, setClasses, \"\");\n  let directiveStorageMap = {\n    enter: classes => {\n      el._x_transition.enter.during = classes;\n    },\n    \"enter-start\": classes => {\n      el._x_transition.enter.start = classes;\n    },\n    \"enter-end\": classes => {\n      el._x_transition.enter.end = classes;\n    },\n    leave: classes => {\n      el._x_transition.leave.during = classes;\n    },\n    \"leave-start\": classes => {\n      el._x_transition.leave.start = classes;\n    },\n    \"leave-end\": classes => {\n      el._x_transition.leave.end = classes;\n    }\n  };\n  directiveStorageMap[stage](classString);\n}\n\nfunction registerTransitionsFromHelper(el, modifiers, stage) {\n  registerTransitionObject(el, setStyles);\n  let doesntSpecify = !modifiers.includes(\"in\") && !modifiers.includes(\"out\") && !stage;\n  let transitioningIn = doesntSpecify || modifiers.includes(\"in\") || [\"enter\"].includes(stage);\n  let transitioningOut = doesntSpecify || modifiers.includes(\"out\") || [\"leave\"].includes(stage);\n\n  if (modifiers.includes(\"in\") && !doesntSpecify) {\n    modifiers = modifiers.filter((i, index) => index < modifiers.indexOf(\"out\"));\n  }\n\n  if (modifiers.includes(\"out\") && !doesntSpecify) {\n    modifiers = modifiers.filter((i, index) => index > modifiers.indexOf(\"out\"));\n  }\n\n  let wantsAll = !modifiers.includes(\"opacity\") && !modifiers.includes(\"scale\");\n  let wantsOpacity = wantsAll || modifiers.includes(\"opacity\");\n  let wantsScale = wantsAll || modifiers.includes(\"scale\");\n  let opacityValue = wantsOpacity ? 0 : 1;\n  let scaleValue = wantsScale ? modifierValue(modifiers, \"scale\", 95) / 100 : 1;\n  let delay = modifierValue(modifiers, \"delay\", 0);\n  let origin = modifierValue(modifiers, \"origin\", \"center\");\n  let property = \"opacity, transform\";\n  let durationIn = modifierValue(modifiers, \"duration\", 150) / 1e3;\n  let durationOut = modifierValue(modifiers, \"duration\", 75) / 1e3;\n  let easing = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n\n  if (transitioningIn) {\n    el._x_transition.enter.during = {\n      transformOrigin: origin,\n      transitionDelay: delay,\n      transitionProperty: property,\n      transitionDuration: `${durationIn}s`,\n      transitionTimingFunction: easing\n    };\n    el._x_transition.enter.start = {\n      opacity: opacityValue,\n      transform: `scale(${scaleValue})`\n    };\n    el._x_transition.enter.end = {\n      opacity: 1,\n      transform: `scale(1)`\n    };\n  }\n\n  if (transitioningOut) {\n    el._x_transition.leave.during = {\n      transformOrigin: origin,\n      transitionDelay: delay,\n      transitionProperty: property,\n      transitionDuration: `${durationOut}s`,\n      transitionTimingFunction: easing\n    };\n    el._x_transition.leave.start = {\n      opacity: 1,\n      transform: `scale(1)`\n    };\n    el._x_transition.leave.end = {\n      opacity: opacityValue,\n      transform: `scale(${scaleValue})`\n    };\n  }\n}\n\nfunction registerTransitionObject(el, setFunction, defaultValue = {}) {\n  if (!el._x_transition) el._x_transition = {\n    enter: {\n      during: defaultValue,\n      start: defaultValue,\n      end: defaultValue\n    },\n    leave: {\n      during: defaultValue,\n      start: defaultValue,\n      end: defaultValue\n    },\n\n    in(before = () => {}, after = () => {}) {\n      transition(el, setFunction, {\n        during: this.enter.during,\n        start: this.enter.start,\n        end: this.enter.end,\n        entering: true\n      }, before, after);\n    },\n\n    out(before = () => {}, after = () => {}) {\n      transition(el, setFunction, {\n        during: this.leave.during,\n        start: this.leave.start,\n        end: this.leave.end,\n        entering: false\n      }, before, after);\n    }\n\n  };\n}\n\nwindow.Element.prototype._x_toggleAndCascadeWithTransitions = function (el, value, show, hide) {\n  let clickAwayCompatibleShow = () => requestAnimationFrame(show);\n\n  if (value) {\n    el._x_transition ? el._x_transition.in(show) : clickAwayCompatibleShow();\n    return;\n  }\n\n  el._x_hidePromise = el._x_transition ? new Promise((resolve, reject) => {\n    el._x_transition.out(() => {}, () => resolve(hide));\n\n    el._x_transitioning.beforeCancel(() => reject({\n      isFromCancelledTransition: true\n    }));\n  }) : Promise.resolve(hide);\n  queueMicrotask(() => {\n    let closest = closestHide(el);\n\n    if (closest) {\n      if (!closest._x_hideChildren) closest._x_hideChildren = [];\n\n      closest._x_hideChildren.push(el);\n    } else {\n      queueMicrotask(() => {\n        let hideAfterChildren = el2 => {\n          let carry = Promise.all([el2._x_hidePromise, ...(el2._x_hideChildren || []).map(hideAfterChildren)]).then(([i]) => i());\n          delete el2._x_hidePromise;\n          delete el2._x_hideChildren;\n          return carry;\n        };\n\n        hideAfterChildren(el).catch(e => {\n          if (!e.isFromCancelledTransition) throw e;\n        });\n      });\n    }\n  });\n};\n\nfunction closestHide(el) {\n  let parent = el.parentNode;\n  if (!parent) return;\n  return parent._x_hidePromise ? parent : closestHide(parent);\n}\n\nfunction transition(el, setFunction, {\n  during,\n  start: start2,\n  end,\n  entering\n} = {}, before = () => {}, after = () => {}) {\n  if (el._x_transitioning) el._x_transitioning.cancel();\n\n  if (Object.keys(during).length === 0 && Object.keys(start2).length === 0 && Object.keys(end).length === 0) {\n    before();\n    after();\n    return;\n  }\n\n  let undoStart, undoDuring, undoEnd;\n  performTransition(el, {\n    start() {\n      undoStart = setFunction(el, start2);\n    },\n\n    during() {\n      undoDuring = setFunction(el, during);\n    },\n\n    before,\n\n    end() {\n      undoStart();\n      undoEnd = setFunction(el, end);\n    },\n\n    after,\n\n    cleanup() {\n      undoDuring();\n      undoEnd();\n    }\n\n  }, entering);\n}\n\nfunction performTransition(el, stages, entering) {\n  let interrupted, reachedBefore, reachedEnd;\n  let finish = once(() => {\n    mutateDom(() => {\n      interrupted = true;\n      if (!reachedBefore) stages.before();\n\n      if (!reachedEnd) {\n        stages.end();\n        releaseNextTicks();\n      }\n\n      stages.after();\n      if (el.isConnected) stages.cleanup();\n      delete el._x_transitioning;\n    });\n  });\n  el._x_transitioning = {\n    beforeCancels: [],\n\n    beforeCancel(callback) {\n      this.beforeCancels.push(callback);\n    },\n\n    cancel: once(function () {\n      while (this.beforeCancels.length) {\n        this.beforeCancels.shift()();\n      }\n\n      ;\n      finish();\n    }),\n    finish,\n    entering\n  };\n  mutateDom(() => {\n    stages.start();\n    stages.during();\n  });\n  holdNextTicks();\n  requestAnimationFrame(() => {\n    if (interrupted) return;\n    let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, \"\").replace(\"s\", \"\")) * 1e3;\n    let delay = Number(getComputedStyle(el).transitionDelay.replace(/,.*/, \"\").replace(\"s\", \"\")) * 1e3;\n    if (duration === 0) duration = Number(getComputedStyle(el).animationDuration.replace(\"s\", \"\")) * 1e3;\n    mutateDom(() => {\n      stages.before();\n    });\n    reachedBefore = true;\n    requestAnimationFrame(() => {\n      if (interrupted) return;\n      mutateDom(() => {\n        stages.end();\n      });\n      releaseNextTicks();\n      setTimeout(el._x_transitioning.finish, duration + delay);\n      reachedEnd = true;\n    });\n  });\n}\n\nfunction modifierValue(modifiers, key, fallback) {\n  if (modifiers.indexOf(key) === -1) return fallback;\n  const rawValue = modifiers[modifiers.indexOf(key) + 1];\n  if (!rawValue) return fallback;\n\n  if (key === \"scale\") {\n    if (isNaN(rawValue)) return fallback;\n  }\n\n  if (key === \"duration\") {\n    let match = rawValue.match(/([0-9]+)ms/);\n    if (match) return match[1];\n  }\n\n  if (key === \"origin\") {\n    if ([\"top\", \"right\", \"left\", \"center\", \"bottom\"].includes(modifiers[modifiers.indexOf(key) + 2])) {\n      return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(\" \");\n    }\n  }\n\n  return rawValue;\n} // packages/alpinejs/src/directives/x-ignore.js\n\n\nvar handler = () => {};\n\nhandler.inline = (el, {\n  modifiers\n}, {\n  cleanup\n}) => {\n  modifiers.includes(\"self\") ? el._x_ignoreSelf = true : el._x_ignore = true;\n  cleanup(() => {\n    modifiers.includes(\"self\") ? delete el._x_ignoreSelf : delete el._x_ignore;\n  });\n};\n\ndirective(\"ignore\", handler); // packages/alpinejs/src/directives/x-effect.js\n\ndirective(\"effect\", (el, {\n  expression\n}, {\n  effect: effect3\n}) => effect3(evaluateLater(el, expression))); // packages/alpinejs/src/utils/bind.js\n\nfunction bind(el, name, value, modifiers = []) {\n  if (!el._x_bindings) el._x_bindings = reactive({});\n  el._x_bindings[name] = value;\n  name = modifiers.includes(\"camel\") ? camelCase(name) : name;\n\n  switch (name) {\n    case \"value\":\n      bindInputValue(el, value);\n      break;\n\n    case \"style\":\n      bindStyles(el, value);\n      break;\n\n    case \"class\":\n      bindClasses(el, value);\n      break;\n\n    default:\n      bindAttribute(el, name, value);\n      break;\n  }\n}\n\nfunction bindInputValue(el, value) {\n  if (el.type === \"radio\") {\n    if (el.attributes.value === void 0) {\n      el.value = value;\n    }\n\n    if (window.fromModel) {\n      el.checked = checkedAttrLooseCompare(el.value, value);\n    }\n  } else if (el.type === \"checkbox\") {\n    if (Number.isInteger(value)) {\n      el.value = value;\n    } else if (!Number.isInteger(value) && !Array.isArray(value) && typeof value !== \"boolean\" && ![null, void 0].includes(value)) {\n      el.value = String(value);\n    } else {\n      if (Array.isArray(value)) {\n        el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n      } else {\n        el.checked = !!value;\n      }\n    }\n  } else if (el.tagName === \"SELECT\") {\n    updateSelect(el, value);\n  } else {\n    if (el.value === value) return;\n    el.value = value;\n  }\n}\n\nfunction bindClasses(el, value) {\n  if (el._x_undoAddedClasses) el._x_undoAddedClasses();\n  el._x_undoAddedClasses = setClasses(el, value);\n}\n\nfunction bindStyles(el, value) {\n  if (el._x_undoAddedStyles) el._x_undoAddedStyles();\n  el._x_undoAddedStyles = setStyles(el, value);\n}\n\nfunction bindAttribute(el, name, value) {\n  if ([null, void 0, false].includes(value) && attributeShouldntBePreservedIfFalsy(name)) {\n    el.removeAttribute(name);\n  } else {\n    if (isBooleanAttr(name)) value = name;\n    setIfChanged(el, name, value);\n  }\n}\n\nfunction setIfChanged(el, attrName, value) {\n  if (el.getAttribute(attrName) != value) {\n    el.setAttribute(attrName, value);\n  }\n}\n\nfunction updateSelect(el, value) {\n  const arrayWrappedValue = [].concat(value).map(value2 => {\n    return value2 + \"\";\n  });\n  Array.from(el.options).forEach(option => {\n    option.selected = arrayWrappedValue.includes(option.value);\n  });\n}\n\nfunction camelCase(subject) {\n  return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n}\n\nfunction checkedAttrLooseCompare(valueA, valueB) {\n  return valueA == valueB;\n}\n\nfunction isBooleanAttr(attrName) {\n  const booleanAttributes = [\"disabled\", \"checked\", \"required\", \"readonly\", \"hidden\", \"open\", \"selected\", \"autofocus\", \"itemscope\", \"multiple\", \"novalidate\", \"allowfullscreen\", \"allowpaymentrequest\", \"formnovalidate\", \"autoplay\", \"controls\", \"loop\", \"muted\", \"playsinline\", \"default\", \"ismap\", \"reversed\", \"async\", \"defer\", \"nomodule\"];\n  return booleanAttributes.includes(attrName);\n}\n\nfunction attributeShouldntBePreservedIfFalsy(name) {\n  return ![\"aria-pressed\", \"aria-checked\"].includes(name);\n} // packages/alpinejs/src/utils/on.js\n\n\nfunction on(el, event, modifiers, callback) {\n  let listenerTarget = el;\n\n  let handler3 = e => callback(e);\n\n  let options = {};\n\n  let wrapHandler = (callback2, wrapper) => e => wrapper(callback2, e);\n\n  if (modifiers.includes(\"camel\")) event = camelCase2(event);\n  if (modifiers.includes(\"passive\")) options.passive = true;\n  if (modifiers.includes(\"window\")) listenerTarget = window;\n  if (modifiers.includes(\"document\")) listenerTarget = document;\n  if (modifiers.includes(\"prevent\")) handler3 = wrapHandler(handler3, (next, e) => {\n    e.preventDefault();\n    next(e);\n  });\n  if (modifiers.includes(\"stop\")) handler3 = wrapHandler(handler3, (next, e) => {\n    e.stopPropagation();\n    next(e);\n  });\n  if (modifiers.includes(\"self\")) handler3 = wrapHandler(handler3, (next, e) => {\n    e.target === el && next(e);\n  });\n\n  if (modifiers.includes(\"away\") || modifiers.includes(\"outside\")) {\n    listenerTarget = document;\n    handler3 = wrapHandler(handler3, (next, e) => {\n      if (el.contains(e.target)) return;\n      if (el.offsetWidth < 1 && el.offsetHeight < 1) return;\n      next(e);\n    });\n  }\n\n  handler3 = wrapHandler(handler3, (next, e) => {\n    if (isKeyEvent(event)) {\n      if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n        return;\n      }\n    }\n\n    next(e);\n  });\n\n  if (modifiers.includes(\"debounce\")) {\n    let nextModifier = modifiers[modifiers.indexOf(\"debounce\") + 1] || \"invalid-wait\";\n    let wait = isNumeric(nextModifier.split(\"ms\")[0]) ? Number(nextModifier.split(\"ms\")[0]) : 250;\n    handler3 = debounce(handler3, wait, this);\n  }\n\n  if (modifiers.includes(\"throttle\")) {\n    let nextModifier = modifiers[modifiers.indexOf(\"throttle\") + 1] || \"invalid-wait\";\n    let wait = isNumeric(nextModifier.split(\"ms\")[0]) ? Number(nextModifier.split(\"ms\")[0]) : 250;\n    handler3 = throttle(handler3, wait, this);\n  }\n\n  if (modifiers.includes(\"once\")) {\n    handler3 = wrapHandler(handler3, (next, e) => {\n      next(e);\n      listenerTarget.removeEventListener(event, handler3, options);\n    });\n  }\n\n  listenerTarget.addEventListener(event, handler3, options);\n  return () => {\n    listenerTarget.removeEventListener(event, handler3, options);\n  };\n}\n\nfunction camelCase2(subject) {\n  return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n}\n\nfunction debounce(func, wait) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function () {\n      timeout = null;\n      func.apply(context, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\nfunction throttle(func, limit) {\n  let inThrottle;\n  return function () {\n    let context = this,\n        args = arguments;\n\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\nfunction isNumeric(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n}\n\nfunction kebabCase(subject) {\n  return subject.replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[_\\s]/, \"-\").toLowerCase();\n}\n\nfunction isKeyEvent(event) {\n  return [\"keydown\", \"keyup\"].includes(event);\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n  let keyModifiers = modifiers.filter(i => {\n    return ![\"window\", \"document\", \"prevent\", \"stop\", \"once\"].includes(i);\n  });\n\n  if (keyModifiers.includes(\"debounce\")) {\n    let debounceIndex = keyModifiers.indexOf(\"debounce\");\n    keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || \"invalid-wait\").split(\"ms\")[0]) ? 2 : 1);\n  }\n\n  if (keyModifiers.length === 0) return false;\n  if (keyModifiers.length === 1 && keyToModifiers(e.key).includes(keyModifiers[0])) return false;\n  const systemKeyModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\", \"cmd\", \"super\"];\n  const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n  keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n  if (selectedSystemKeyModifiers.length > 0) {\n    const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n      if (modifier === \"cmd\" || modifier === \"super\") modifier = \"meta\";\n      return e[`${modifier}Key`];\n    });\n\n    if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n      if (keyToModifiers(e.key).includes(keyModifiers[0])) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction keyToModifiers(key) {\n  if (!key) return [];\n  key = kebabCase(key);\n  let modifierToKeyMap = {\n    ctrl: \"control\",\n    slash: \"/\",\n    space: \"-\",\n    spacebar: \"-\",\n    cmd: \"meta\",\n    esc: \"escape\",\n    up: \"arrow-up\",\n    down: \"arrow-down\",\n    left: \"arrow-left\",\n    right: \"arrow-right\"\n  };\n  modifierToKeyMap[key] = key;\n  return Object.keys(modifierToKeyMap).map(modifier => {\n    if (modifierToKeyMap[modifier] === key) return modifier;\n  }).filter(modifier => modifier);\n} // packages/alpinejs/src/directives/x-model.js\n\n\ndirective(\"model\", (el, {\n  modifiers,\n  expression\n}, {\n  effect: effect3,\n  cleanup\n}) => {\n  let evaluate2 = evaluateLater(el, expression);\n  let assignmentExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n  let evaluateAssignment = evaluateLater(el, assignmentExpression);\n  var event = el.tagName.toLowerCase() === \"select\" || [\"checkbox\", \"radio\"].includes(el.type) || modifiers.includes(\"lazy\") ? \"change\" : \"input\";\n  let assigmentFunction = generateAssignmentFunction(el, modifiers, expression);\n  let removeListener = on(el, event, modifiers, e => {\n    evaluateAssignment(() => {}, {\n      scope: {\n        $event: e,\n        rightSideOfExpression: assigmentFunction\n      }\n    });\n  });\n  cleanup(() => removeListener());\n\n  el._x_forceModelUpdate = () => {\n    evaluate2(value => {\n      if (value === void 0 && expression.match(/\\./)) value = \"\";\n      window.fromModel = true;\n      mutateDom(() => bind(el, \"value\", value));\n      delete window.fromModel;\n    });\n  };\n\n  effect3(() => {\n    if (modifiers.includes(\"unintrusive\") && document.activeElement.isSameNode(el)) return;\n\n    el._x_forceModelUpdate();\n  });\n});\n\nfunction generateAssignmentFunction(el, modifiers, expression) {\n  if (el.type === \"radio\") {\n    mutateDom(() => {\n      if (!el.hasAttribute(\"name\")) el.setAttribute(\"name\", expression);\n    });\n  }\n\n  return (event, currentValue) => {\n    return mutateDom(() => {\n      if (event instanceof CustomEvent && event.detail !== void 0) {\n        return event.detail;\n      } else if (el.type === \"checkbox\") {\n        if (Array.isArray(currentValue)) {\n          let newValue = modifiers.includes(\"number\") ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el2 => !checkedAttrLooseCompare2(el2, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === \"select\" && el.multiple) {\n        return modifiers.includes(\"number\") ? Array.from(event.target.selectedOptions).map(option => {\n          let rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        let rawValue = event.target.value;\n        return modifiers.includes(\"number\") ? safeParseNumber(rawValue) : modifiers.includes(\"trim\") ? rawValue.trim() : rawValue;\n      }\n    });\n  };\n}\n\nfunction safeParseNumber(rawValue) {\n  let number = rawValue ? parseFloat(rawValue) : null;\n  return isNumeric2(number) ? number : rawValue;\n}\n\nfunction checkedAttrLooseCompare2(valueA, valueB) {\n  return valueA == valueB;\n}\n\nfunction isNumeric2(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n} // packages/alpinejs/src/directives/x-cloak.js\n\n\ndirective(\"cloak\", el => queueMicrotask(() => mutateDom(() => el.removeAttribute(prefix(\"cloak\"))))); // packages/alpinejs/src/directives/x-init.js\n\naddInitSelector(() => `[${prefix(\"init\")}]`);\ndirective(\"init\", skipDuringClone((el, {\n  expression\n}) => evaluate(el, expression, {}, false))); // packages/alpinejs/src/directives/x-text.js\n\ndirective(\"text\", (el, {\n  expression\n}, {\n  effect: effect3,\n  evaluateLater: evaluateLater2\n}) => {\n  let evaluate2 = evaluateLater2(expression);\n  effect3(() => {\n    evaluate2(value => {\n      mutateDom(() => {\n        el.textContent = value;\n      });\n    });\n  });\n}); // packages/alpinejs/src/directives/x-html.js\n\ndirective(\"html\", (el, {\n  expression\n}, {\n  effect: effect3,\n  evaluateLater: evaluateLater2\n}) => {\n  let evaluate2 = evaluateLater2(expression);\n  effect3(() => {\n    evaluate2(value => {\n      el.innerHTML = value;\n    });\n  });\n}); // packages/alpinejs/src/directives/x-bind.js\n\nmapAttributes(startingWith(\":\", into(prefix(\"bind:\"))));\ndirective(\"bind\", (el, {\n  value,\n  modifiers,\n  expression,\n  original\n}, {\n  effect: effect3\n}) => {\n  if (!value) return applyBindingsObject(el, expression, original, effect3);\n  if (value === \"key\") return storeKeyForXFor(el, expression);\n  let evaluate2 = evaluateLater(el, expression);\n  effect3(() => evaluate2(result => {\n    if (result === void 0 && expression.match(/\\./)) result = \"\";\n    mutateDom(() => bind(el, value, result, modifiers));\n  }));\n});\n\nfunction applyBindingsObject(el, expression, original, effect3) {\n  let getBindings = evaluateLater(el, expression);\n  let cleanupRunners = [];\n  effect3(() => {\n    while (cleanupRunners.length) cleanupRunners.pop()();\n\n    getBindings(bindings => {\n      let attributes = Object.entries(bindings).map(([name, value]) => ({\n        name,\n        value\n      }));\n      directives(el, attributes, original).map(handle => {\n        cleanupRunners.push(handle.runCleanups);\n        handle();\n      });\n    });\n  });\n}\n\nfunction storeKeyForXFor(el, expression) {\n  el._x_keyExpression = expression;\n} // packages/alpinejs/src/directives/x-data.js\n\n\naddRootSelector(() => `[${prefix(\"data\")}]`);\ndirective(\"data\", skipDuringClone((el, {\n  expression\n}, {\n  cleanup\n}) => {\n  expression = expression === \"\" ? \"{}\" : expression;\n  let magicContext = {};\n  injectMagics(magicContext, el);\n  let dataProviderContext = {};\n  injectDataProviders(dataProviderContext, magicContext);\n  let data2 = evaluate(el, expression, {\n    scope: dataProviderContext\n  });\n  injectMagics(data2, el);\n  let reactiveData = reactive(data2);\n  initInterceptors(reactiveData);\n  let undo = addScopeToNode(el, reactiveData);\n  reactiveData[\"init\"] && evaluate(el, reactiveData[\"init\"]);\n  cleanup(() => {\n    undo();\n    reactiveData[\"destroy\"] && evaluate(el, reactiveData[\"destroy\"]);\n  });\n})); // packages/alpinejs/src/directives/x-show.js\n\ndirective(\"show\", (el, {\n  modifiers,\n  expression\n}, {\n  effect: effect3\n}) => {\n  let evaluate2 = evaluateLater(el, expression);\n\n  let hide = () => mutateDom(() => {\n    el.style.display = \"none\";\n    el._x_isShown = false;\n  });\n\n  let show = () => mutateDom(() => {\n    if (el.style.length === 1 && el.style.display === \"none\") {\n      el.removeAttribute(\"style\");\n    } else {\n      el.style.removeProperty(\"display\");\n    }\n\n    el._x_isShown = true;\n  });\n\n  let clickAwayCompatibleShow = () => setTimeout(show);\n\n  let toggle = once(value => value ? show() : hide(), value => {\n    if (typeof el._x_toggleAndCascadeWithTransitions === \"function\") {\n      el._x_toggleAndCascadeWithTransitions(el, value, show, hide);\n    } else {\n      value ? clickAwayCompatibleShow() : hide();\n    }\n  });\n  let oldValue;\n  let firstTime = true;\n  effect3(() => evaluate2(value => {\n    if (!firstTime && value === oldValue) return;\n    if (modifiers.includes(\"immediate\")) value ? clickAwayCompatibleShow() : hide();\n    toggle(value);\n    oldValue = value;\n    firstTime = false;\n  }));\n}); // packages/alpinejs/src/directives/x-for.js\n\ndirective(\"for\", (el, {\n  expression\n}, {\n  effect: effect3,\n  cleanup\n}) => {\n  let iteratorNames = parseForExpression(expression);\n  let evaluateItems = evaluateLater(el, iteratorNames.items);\n  let evaluateKey = evaluateLater(el, el._x_keyExpression || \"index\");\n  el._x_prevKeys = [];\n  el._x_lookup = {};\n  effect3(() => loop(el, iteratorNames, evaluateItems, evaluateKey));\n  cleanup(() => {\n    Object.values(el._x_lookup).forEach(el2 => el2.remove());\n    delete el._x_prevKeys;\n    delete el._x_lookup;\n  });\n});\n\nfunction loop(el, iteratorNames, evaluateItems, evaluateKey) {\n  let isObject = i => typeof i === \"object\" && !Array.isArray(i);\n\n  let templateEl = el;\n  evaluateItems(items => {\n    if (isNumeric3(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    if (items === void 0) items = [];\n    let lookup = el._x_lookup;\n    let prevKeys = el._x_prevKeys;\n    let scopes = [];\n    let keys = [];\n\n    if (isObject(items)) {\n      items = Object.entries(items).map(([key, value]) => {\n        let scope = getIterationScopeVariables(iteratorNames, value, key, items);\n        evaluateKey(value2 => keys.push(value2), {\n          scope: {\n            index: key,\n            ...scope\n          }\n        });\n        scopes.push(scope);\n      });\n    } else {\n      for (let i = 0; i < items.length; i++) {\n        let scope = getIterationScopeVariables(iteratorNames, items[i], i, items);\n        evaluateKey(value => keys.push(value), {\n          scope: {\n            index: i,\n            ...scope\n          }\n        });\n        scopes.push(scope);\n      }\n    }\n\n    let adds = [];\n    let moves = [];\n    let removes = [];\n    let sames = [];\n\n    for (let i = 0; i < prevKeys.length; i++) {\n      let key = prevKeys[i];\n      if (keys.indexOf(key) === -1) removes.push(key);\n    }\n\n    prevKeys = prevKeys.filter(key => !removes.includes(key));\n    let lastKey = \"template\";\n\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      let prevIndex = prevKeys.indexOf(key);\n\n      if (prevIndex === -1) {\n        prevKeys.splice(i, 0, key);\n        adds.push([lastKey, i]);\n      } else if (prevIndex !== i) {\n        let keyInSpot = prevKeys.splice(i, 1)[0];\n        let keyForSpot = prevKeys.splice(prevIndex - 1, 1)[0];\n        prevKeys.splice(i, 0, keyForSpot);\n        prevKeys.splice(prevIndex, 0, keyInSpot);\n        moves.push([keyInSpot, keyForSpot]);\n      } else {\n        sames.push(key);\n      }\n\n      lastKey = key;\n    }\n\n    for (let i = 0; i < removes.length; i++) {\n      let key = removes[i];\n      lookup[key].remove();\n      lookup[key] = null;\n      delete lookup[key];\n    }\n\n    for (let i = 0; i < moves.length; i++) {\n      let [keyInSpot, keyForSpot] = moves[i];\n      let elInSpot = lookup[keyInSpot];\n      let elForSpot = lookup[keyForSpot];\n      let marker = document.createElement(\"div\");\n      mutateDom(() => {\n        elForSpot.after(marker);\n        elInSpot.after(elForSpot);\n        marker.before(elInSpot);\n        marker.remove();\n      });\n      refreshScope(elForSpot, scopes[keys.indexOf(keyForSpot)]);\n    }\n\n    for (let i = 0; i < adds.length; i++) {\n      let [lastKey2, index] = adds[i];\n      let lastEl = lastKey2 === \"template\" ? templateEl : lookup[lastKey2];\n      let scope = scopes[index];\n      let key = keys[index];\n      let clone2 = document.importNode(templateEl.content, true).firstElementChild;\n      addScopeToNode(clone2, reactive(scope), templateEl);\n      mutateDom(() => {\n        lastEl.after(clone2);\n        initTree(clone2);\n      });\n\n      if (typeof key === \"object\") {\n        warn(\"x-for key cannot be an object, it must be a string or an integer\", templateEl);\n      }\n\n      lookup[key] = clone2;\n    }\n\n    for (let i = 0; i < sames.length; i++) {\n      refreshScope(lookup[sames[i]], scopes[keys.indexOf(sames[i])]);\n    }\n\n    templateEl._x_prevKeys = keys;\n  });\n}\n\nfunction parseForExpression(expression) {\n  let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n  let stripParensRE = /^\\s*\\(|\\)\\s*$/g;\n  let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n  let inMatch = expression.match(forAliasRE);\n  if (!inMatch) return;\n  let res = {};\n  res.items = inMatch[2].trim();\n  let item = inMatch[1].replace(stripParensRE, \"\").trim();\n  let iteratorMatch = item.match(forIteratorRE);\n\n  if (iteratorMatch) {\n    res.item = item.replace(forIteratorRE, \"\").trim();\n    res.index = iteratorMatch[1].trim();\n\n    if (iteratorMatch[2]) {\n      res.collection = iteratorMatch[2].trim();\n    }\n  } else {\n    res.item = item;\n  }\n\n  return res;\n}\n\nfunction getIterationScopeVariables(iteratorNames, item, index, items) {\n  let scopeVariables = {};\n\n  if (/^\\[.*\\]$/.test(iteratorNames.item) && Array.isArray(item)) {\n    let names = iteratorNames.item.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\").map(i => i.trim());\n    names.forEach((name, i) => {\n      scopeVariables[name] = item[i];\n    });\n  } else {\n    scopeVariables[iteratorNames.item] = item;\n  }\n\n  if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n  if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n  return scopeVariables;\n}\n\nfunction isNumeric3(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n} // packages/alpinejs/src/directives/x-ref.js\n\n\nfunction handler2() {}\n\nhandler2.inline = (el, {\n  expression\n}, {\n  cleanup\n}) => {\n  let root = closestRoot(el);\n  if (!root._x_refs) root._x_refs = {};\n  root._x_refs[expression] = el;\n  cleanup(() => delete root._x_refs[expression]);\n};\n\ndirective(\"ref\", handler2); // packages/alpinejs/src/directives/x-if.js\n\ndirective(\"if\", (el, {\n  expression\n}, {\n  effect: effect3,\n  cleanup\n}) => {\n  let evaluate2 = evaluateLater(el, expression);\n\n  let show = () => {\n    if (el._x_currentIfEl) return el._x_currentIfEl;\n    let clone2 = el.content.cloneNode(true).firstElementChild;\n    addScopeToNode(clone2, {}, el);\n    mutateDom(() => {\n      el.after(clone2);\n      initTree(clone2);\n    });\n    el._x_currentIfEl = clone2;\n\n    el._x_undoIf = () => {\n      clone2.remove();\n      delete el._x_currentIfEl;\n    };\n\n    return clone2;\n  };\n\n  let hide = () => {\n    if (!el._x_undoIf) return;\n\n    el._x_undoIf();\n\n    delete el._x_undoIf;\n  };\n\n  effect3(() => evaluate2(value => {\n    value ? show() : hide();\n  }));\n  cleanup(() => el._x_undoIf && el._x_undoIf());\n}); // packages/alpinejs/src/directives/x-on.js\n\nmapAttributes(startingWith(\"@\", into(prefix(\"on:\"))));\ndirective(\"on\", skipDuringClone((el, {\n  value,\n  modifiers,\n  expression\n}, {\n  cleanup\n}) => {\n  let evaluate2 = expression ? evaluateLater(el, expression) : () => {};\n  let removeListener = on(el, value, modifiers, e => {\n    evaluate2(() => {}, {\n      scope: {\n        $event: e\n      },\n      params: [e]\n    });\n  });\n  cleanup(() => removeListener());\n})); // packages/alpinejs/src/index.js\n\nalpine_default.setEvaluator(normalEvaluator);\nalpine_default.setReactivityEngine({\n  reactive: import_reactivity9.reactive,\n  effect: import_reactivity9.effect,\n  release: import_reactivity9.stop,\n  raw: import_reactivity9.toRaw\n});\nvar src_default = alpine_default; // packages/alpinejs/builds/module.js\n\nvar module_default = src_default;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/alpinejs/dist/module.esm.js?");

/***/ }),

/***/ "./node_modules/baguettebox.js/dist/baguetteBox.min.js":
/*!*************************************************************!*\
  !*** ./node_modules/baguettebox.js/dist/baguetteBox.min.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * baguetteBox.js\n * @author  feimosi\n * @version 1.11.1\n * @url https://github.com/feimosi/baguetteBox.js\n */\n!function (e, t) {\n  \"use strict\";\n\n   true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function () {\n  \"use strict\";\n\n  var r,\n      l,\n      u,\n      c,\n      d,\n      f = '<svg width=\"44\" height=\"60\"><polyline points=\"30 10 10 30 30 50\" stroke=\"rgba(255,255,255,0.5)\" stroke-width=\"4\"stroke-linecap=\"butt\" fill=\"none\" stroke-linejoin=\"round\"/></svg>',\n      g = '<svg width=\"44\" height=\"60\"><polyline points=\"14 10 34 30 14 50\" stroke=\"rgba(255,255,255,0.5)\" stroke-width=\"4\"stroke-linecap=\"butt\" fill=\"none\" stroke-linejoin=\"round\"/></svg>',\n      p = '<svg width=\"30\" height=\"30\"><g stroke=\"rgb(160,160,160)\" stroke-width=\"4\"><line x1=\"5\" y1=\"5\" x2=\"25\" y2=\"25\"/><line x1=\"5\" y1=\"25\" x2=\"25\" y2=\"5\"/></g></svg>',\n      b = {},\n      v = {\n    captions: !0,\n    buttons: \"auto\",\n    fullScreen: !1,\n    noScrollbars: !1,\n    bodyClass: \"baguetteBox-open\",\n    titleTag: !1,\n    async: !1,\n    preload: 2,\n    animation: \"slideIn\",\n    afterShow: null,\n    afterHide: null,\n    onChange: null,\n    overlayBackgroundColor: \"rgba(0,0,0,.8)\"\n  },\n      m = {},\n      h = [],\n      o = 0,\n      n = !1,\n      i = {},\n      a = !1,\n      y = /.+\\.(gif|jpe?g|png|webp)/i,\n      w = {},\n      k = [],\n      s = null,\n      x = function (e) {\n    -1 !== e.target.id.indexOf(\"baguette-img\") && j();\n  },\n      E = function (e) {\n    e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, D();\n  },\n      C = function (e) {\n    e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, X();\n  },\n      B = function (e) {\n    e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, j();\n  },\n      T = function (e) {\n    i.count++, 1 < i.count && (i.multitouch = !0), i.startX = e.changedTouches[0].pageX, i.startY = e.changedTouches[0].pageY;\n  },\n      N = function (e) {\n    if (!a && !i.multitouch) {\n      e.preventDefault ? e.preventDefault() : e.returnValue = !1;\n      var t = e.touches[0] || e.changedTouches[0];\n      40 < t.pageX - i.startX ? (a = !0, D()) : t.pageX - i.startX < -40 ? (a = !0, X()) : 100 < i.startY - t.pageY && j();\n    }\n  },\n      L = function () {\n    i.count--, i.count <= 0 && (i.multitouch = !1), a = !1;\n  },\n      A = function () {\n    L();\n  },\n      P = function (e) {\n    \"block\" === r.style.display && r.contains && !r.contains(e.target) && (e.stopPropagation(), Y());\n  };\n\n  function S(e) {\n    if (w.hasOwnProperty(e)) {\n      var t = w[e].galleries;\n      [].forEach.call(t, function (e) {\n        [].forEach.call(e, function (e) {\n          W(e.imageElement, \"click\", e.eventHandler);\n        }), h === e && (h = []);\n      }), delete w[e];\n    }\n  }\n\n  function F(e) {\n    switch (e.keyCode) {\n      case 37:\n        D();\n        break;\n\n      case 39:\n        X();\n        break;\n\n      case 27:\n        j();\n        break;\n\n      case 36:\n        !function t(e) {\n          e && e.preventDefault();\n          return M(0);\n        }(e);\n        break;\n\n      case 35:\n        !function n(e) {\n          e && e.preventDefault();\n          return M(h.length - 1);\n        }(e);\n    }\n  }\n\n  function H(e, t) {\n    if (h !== e) {\n      for (h = e, function s(e) {\n        e = e || {};\n\n        for (var t in v) b[t] = v[t], \"undefined\" != typeof e[t] && (b[t] = e[t]);\n\n        l.style.transition = l.style.webkitTransition = \"fadeIn\" === b.animation ? \"opacity .4s ease\" : \"slideIn\" === b.animation ? \"\" : \"none\", \"auto\" === b.buttons && ((\"ontouchstart\" in window) || 1 === h.length) && (b.buttons = !1);\n        u.style.display = c.style.display = b.buttons ? \"\" : \"none\";\n\n        try {\n          r.style.backgroundColor = b.overlayBackgroundColor;\n        } catch (n) {}\n      }(t); l.firstChild;) l.removeChild(l.firstChild);\n\n      for (var n, o = [], i = [], a = k.length = 0; a < e.length; a++) (n = J(\"div\")).className = \"full-image\", n.id = \"baguette-img-\" + a, k.push(n), o.push(\"baguetteBox-figure-\" + a), i.push(\"baguetteBox-figcaption-\" + a), l.appendChild(k[a]);\n\n      r.setAttribute(\"aria-labelledby\", o.join(\" \")), r.setAttribute(\"aria-describedby\", i.join(\" \"));\n    }\n  }\n\n  function I(e) {\n    b.noScrollbars && (document.documentElement.style.overflowY = \"hidden\", document.body.style.overflowY = \"scroll\"), \"block\" !== r.style.display && (U(document, \"keydown\", F), i = {\n      count: 0,\n      startX: null,\n      startY: null\n    }, q(o = e, function () {\n      z(o), V(o);\n    }), R(), r.style.display = \"block\", b.fullScreen && function t() {\n      r.requestFullscreen ? r.requestFullscreen() : r.webkitRequestFullscreen ? r.webkitRequestFullscreen() : r.mozRequestFullScreen && r.mozRequestFullScreen();\n    }(), setTimeout(function () {\n      r.className = \"visible\", b.bodyClass && document.body.classList && document.body.classList.add(b.bodyClass), b.afterShow && b.afterShow();\n    }, 50), b.onChange && b.onChange(o, k.length), s = document.activeElement, Y(), n = !0);\n  }\n\n  function Y() {\n    b.buttons ? u.focus() : d.focus();\n  }\n\n  function j() {\n    b.noScrollbars && (document.documentElement.style.overflowY = \"auto\", document.body.style.overflowY = \"auto\"), \"none\" !== r.style.display && (W(document, \"keydown\", F), r.className = \"\", setTimeout(function () {\n      r.style.display = \"none\", document.fullscreen && function e() {\n        document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen();\n      }(), b.bodyClass && document.body.classList && document.body.classList.remove(b.bodyClass), b.afterHide && b.afterHide(), s && s.focus(), n = !1;\n    }, 500));\n  }\n\n  function q(t, n) {\n    var e = k[t],\n        o = h[t];\n    if (void 0 !== e && void 0 !== o) if (e.getElementsByTagName(\"img\")[0]) n && n();else {\n      var i = o.imageElement,\n          a = i.getElementsByTagName(\"img\")[0],\n          s = \"function\" == typeof b.captions ? b.captions.call(h, i) : i.getAttribute(\"data-caption\") || i.title,\n          r = function d(e) {\n        var t = e.href;\n\n        if (e.dataset) {\n          var n = [];\n\n          for (var o in e.dataset) \"at-\" !== o.substring(0, 3) || isNaN(o.substring(3)) || (n[o.replace(\"at-\", \"\")] = e.dataset[o]);\n\n          for (var i = Object.keys(n).sort(function (e, t) {\n            return parseInt(e, 10) < parseInt(t, 10) ? -1 : 1;\n          }), a = window.innerWidth * window.devicePixelRatio, s = 0; s < i.length - 1 && i[s] < a;) s++;\n\n          t = n[i[s]] || t;\n        }\n\n        return t;\n      }(i),\n          l = J(\"figure\");\n\n      if (l.id = \"baguetteBox-figure-\" + t, l.innerHTML = '<div class=\"baguetteBox-spinner\"><div class=\"baguetteBox-double-bounce1\"></div><div class=\"baguetteBox-double-bounce2\"></div></div>', b.captions && s) {\n        var u = J(\"figcaption\");\n        u.id = \"baguetteBox-figcaption-\" + t, u.innerHTML = s, l.appendChild(u);\n      }\n\n      e.appendChild(l);\n      var c = J(\"img\");\n      c.onload = function () {\n        var e = document.querySelector(\"#baguette-img-\" + t + \" .baguetteBox-spinner\");\n        l.removeChild(e), !b.async && n && n();\n      }, c.setAttribute(\"src\", r), c.alt = a && a.alt || \"\", b.titleTag && s && (c.title = s), l.appendChild(c), b.async && n && n();\n    }\n  }\n\n  function X() {\n    return M(o + 1);\n  }\n\n  function D() {\n    return M(o - 1);\n  }\n\n  function M(e, t) {\n    return !n && 0 <= e && e < t.length ? (H(t, b), I(e), !0) : e < 0 ? (b.animation && O(\"left\"), !1) : e >= k.length ? (b.animation && O(\"right\"), !1) : (q(o = e, function () {\n      z(o), V(o);\n    }), R(), b.onChange && b.onChange(o, k.length), !0);\n  }\n\n  function O(e) {\n    l.className = \"bounce-from-\" + e, setTimeout(function () {\n      l.className = \"\";\n    }, 400);\n  }\n\n  function R() {\n    var e = 100 * -o + \"%\";\n    \"fadeIn\" === b.animation ? (l.style.opacity = 0, setTimeout(function () {\n      m.transforms ? l.style.transform = l.style.webkitTransform = \"translate3d(\" + e + \",0,0)\" : l.style.left = e, l.style.opacity = 1;\n    }, 400)) : m.transforms ? l.style.transform = l.style.webkitTransform = \"translate3d(\" + e + \",0,0)\" : l.style.left = e;\n  }\n\n  function z(e) {\n    e - o >= b.preload || q(e + 1, function () {\n      z(e + 1);\n    });\n  }\n\n  function V(e) {\n    o - e >= b.preload || q(e - 1, function () {\n      V(e - 1);\n    });\n  }\n\n  function U(e, t, n, o) {\n    e.addEventListener ? e.addEventListener(t, n, o) : e.attachEvent(\"on\" + t, function (e) {\n      (e = e || window.event).target = e.target || e.srcElement, n(e);\n    });\n  }\n\n  function W(e, t, n, o) {\n    e.removeEventListener ? e.removeEventListener(t, n, o) : e.detachEvent(\"on\" + t, n);\n  }\n\n  function G(e) {\n    return document.getElementById(e);\n  }\n\n  function J(e) {\n    return document.createElement(e);\n  }\n\n  return [].forEach || (Array.prototype.forEach = function (e, t) {\n    for (var n = 0; n < this.length; n++) e.call(t, this[n], n, this);\n  }), [].filter || (Array.prototype.filter = function (e, t, n, o, i) {\n    for (n = this, o = [], i = 0; i < n.length; i++) e.call(t, n[i], i, n) && o.push(n[i]);\n\n    return o;\n  }), {\n    run: function K(e, t) {\n      return m.transforms = function n() {\n        var e = J(\"div\");\n        return \"undefined\" != typeof e.style.perspective || \"undefined\" != typeof e.style.webkitPerspective;\n      }(), m.svg = function o() {\n        var e = J(\"div\");\n        return e.innerHTML = \"<svg/>\", \"http://www.w3.org/2000/svg\" === (e.firstChild && e.firstChild.namespaceURI);\n      }(), m.passiveEvents = function i() {\n        var e = !1;\n\n        try {\n          var t = Object.defineProperty({}, \"passive\", {\n            get: function () {\n              e = !0;\n            }\n          });\n          window.addEventListener(\"test\", null, t);\n        } catch (n) {}\n\n        return e;\n      }(), function a() {\n        if (r = G(\"baguetteBox-overlay\")) return l = G(\"baguetteBox-slider\"), u = G(\"previous-button\"), c = G(\"next-button\"), void (d = G(\"close-button\"));\n        (r = J(\"div\")).setAttribute(\"role\", \"dialog\"), r.id = \"baguetteBox-overlay\", document.getElementsByTagName(\"body\")[0].appendChild(r), (l = J(\"div\")).id = \"baguetteBox-slider\", r.appendChild(l), (u = J(\"button\")).setAttribute(\"type\", \"button\"), u.id = \"previous-button\", u.setAttribute(\"aria-label\", \"Previous\"), u.innerHTML = m.svg ? f : \"&lt;\", r.appendChild(u), (c = J(\"button\")).setAttribute(\"type\", \"button\"), c.id = \"next-button\", c.setAttribute(\"aria-label\", \"Next\"), c.innerHTML = m.svg ? g : \"&gt;\", r.appendChild(c), (d = J(\"button\")).setAttribute(\"type\", \"button\"), d.id = \"close-button\", d.setAttribute(\"aria-label\", \"Close\"), d.innerHTML = m.svg ? p : \"&times;\", r.appendChild(d), u.className = c.className = d.className = \"baguetteBox-button\", function n() {\n          var e = m.passiveEvents ? {\n            passive: !1\n          } : null,\n              t = m.passiveEvents ? {\n            passive: !0\n          } : null;\n          U(r, \"click\", x), U(u, \"click\", E), U(c, \"click\", C), U(d, \"click\", B), U(l, \"contextmenu\", A), U(r, \"touchstart\", T, t), U(r, \"touchmove\", N, e), U(r, \"touchend\", L), U(document, \"focus\", P, !0);\n        }();\n      }(), S(e), function s(e, a) {\n        var t = document.querySelectorAll(e),\n            n = {\n          galleries: [],\n          nodeList: t\n        };\n        return w[e] = n, [].forEach.call(t, function (e) {\n          a && a.filter && (y = a.filter);\n          var t = [];\n\n          if (t = \"A\" === e.tagName ? [e] : e.getElementsByTagName(\"a\"), 0 !== (t = [].filter.call(t, function (e) {\n            if (-1 === e.className.indexOf(a && a.ignoreClass)) return y.test(e.href);\n          })).length) {\n            var i = [];\n            [].forEach.call(t, function (e, t) {\n              var n = function (e) {\n                e.preventDefault ? e.preventDefault() : e.returnValue = !1, H(i, a), I(t);\n              },\n                  o = {\n                eventHandler: n,\n                imageElement: e\n              };\n\n              U(e, \"click\", n), i.push(o);\n            }), n.galleries.push(i);\n          }\n        }), n.galleries;\n      }(e, t);\n    },\n    show: M,\n    showNext: X,\n    showPrevious: D,\n    hide: j,\n    destroy: function e() {\n      !function n() {\n        var e = m.passiveEvents ? {\n          passive: !1\n        } : null,\n            t = m.passiveEvents ? {\n          passive: !0\n        } : null;\n        W(r, \"click\", x), W(u, \"click\", E), W(c, \"click\", C), W(d, \"click\", B), W(l, \"contextmenu\", A), W(r, \"touchstart\", T, t), W(r, \"touchmove\", N, e), W(r, \"touchend\", L), W(document, \"focus\", P, !0);\n      }(), function t() {\n        for (var e in w) w.hasOwnProperty(e) && S(e);\n      }(), W(document, \"keydown\", F), document.getElementsByTagName(\"body\")[0].removeChild(document.getElementById(\"baguetteBox-overlay\")), w = {}, h = [], o = 0;\n    }\n  };\n});\n\n//# sourceURL=webpack:///./node_modules/baguettebox.js/dist/baguetteBox.min.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/alpine/index.js":
/*!*****************************!*\
  !*** ./src/alpine/index.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var alpinejs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alpinejs */ \"./node_modules/alpinejs/dist/module.esm.js\");\n\nwindow.Alpine = alpinejs__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nalpinejs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].start();\n\n//# sourceURL=webpack:///./src/alpine/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_styles_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/styles.scss */ \"./src/styles/styles.scss\");\n/* harmony import */ var _scripts_scripts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/scripts */ \"./src/scripts/scripts.js\");\n/* harmony import */ var _scripts_scripts__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_scripts_scripts__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _alpine_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./alpine/index */ \"./src/alpine/index.js\");\n\n\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/scripts/scripts.js":
/*!********************************!*\
  !*** ./src/scripts/scripts.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("window.baguetteBox = __webpack_require__(/*! baguettebox.js */ \"./node_modules/baguettebox.js/dist/baguetteBox.min.js\");\n\nwindow.initLightBox = function (id) {\n  window.baguetteBox.run(id);\n};\n\n//# sourceURL=webpack:///./src/scripts/scripts.js?");

/***/ }),

/***/ "./src/styles/styles.scss":
/*!********************************!*\
  !*** ./src/styles/styles.scss ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack:///./src/styles/styles.scss?");

/***/ })

/******/ });